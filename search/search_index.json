{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Introduction Waldur is a platform for managing hybrid cloud resources. It is used both for controlling internal enterprise IT resources and for selling cloud services. Waldur is composed of the following main components: Waldur MasterMind - broker and orchestrator of cloud services. Responsible for technical service delivery and connected matters. Exposes REST API for management Waldur HomePort - web-based self-service portal. Talks REST to MasterMind. Waldur is open-source, extendable and comes with a professional support provided by OpenNode. To get a quick feeling what Waldur is, take a look at some screenshots . If you are interested in deploying, check the getting started section!","title":"Introduction"},{"location":"index.html#introduction","text":"Waldur is a platform for managing hybrid cloud resources. It is used both for controlling internal enterprise IT resources and for selling cloud services. Waldur is composed of the following main components: Waldur MasterMind - broker and orchestrator of cloud services. Responsible for technical service delivery and connected matters. Exposes REST API for management Waldur HomePort - web-based self-service portal. Talks REST to MasterMind. Waldur is open-source, extendable and comes with a professional support provided by OpenNode. To get a quick feeling what Waldur is, take a look at some screenshots . If you are interested in deploying, check the getting started section!","title":"Introduction"},{"location":"getting-started.html","text":"Getting started Installing Waldur is a simple and straightforward process. Pick method of installation There are 2 supported methods: Using docker-compose . Fastest but runs on a single server. Using Helm . For deploying on Kubernetes clusters. Configure Waldur Tune Waldur configuration to match your deployment. Majority of the configuration is done on Mastermind side. Exact method of configuration depends on the chosen method of installation. Settings are grouped by modules, you can see all available ones in the configuration guide . The most typical aspects for configuration are: White-labelling . Setting custom logos and terms of usage. Configuring identity providers . Waldur supports a range of OIDC and SAML based IdPs. Adding offerings for sharing among Waldur users. Tip For easier management of Waldur deployments and configuration we provide Ansible playbooks . Profit! You are done! If you are happy and want to support the project, make sure you check the support page . Danger Before going to production, make sure you have completed the go-live checklist .","title":"Getting started"},{"location":"getting-started.html#getting-started","text":"Installing Waldur is a simple and straightforward process.","title":"Getting started"},{"location":"getting-started.html#pick-method-of-installation","text":"There are 2 supported methods: Using docker-compose . Fastest but runs on a single server. Using Helm . For deploying on Kubernetes clusters.","title":"Pick method of installation"},{"location":"getting-started.html#configure-waldur","text":"Tune Waldur configuration to match your deployment. Majority of the configuration is done on Mastermind side. Exact method of configuration depends on the chosen method of installation. Settings are grouped by modules, you can see all available ones in the configuration guide . The most typical aspects for configuration are: White-labelling . Setting custom logos and terms of usage. Configuring identity providers . Waldur supports a range of OIDC and SAML based IdPs. Adding offerings for sharing among Waldur users. Tip For easier management of Waldur deployments and configuration we provide Ansible playbooks .","title":"Configure Waldur"},{"location":"getting-started.html#profit","text":"You are done! If you are happy and want to support the project, make sure you check the support page . Danger Before going to production, make sure you have completed the go-live checklist .","title":"Profit!"},{"location":"about/contributing.html","text":"Contributing Waldur is an open project welcoming contributions. To assure the smooth acceptance of contributions please review the contribution guidelines below. Pull requests We welcome contributions (patches, new features, translations, etc) through pull requests. Please make sure that the following is addressed when making a pull request: a request has a clear scope - new feature, bugfix, refactoring. Granular pull requests make integration much faster; the code is following code conventions of the corresponding platform and linters / tests are passing; Localisation If you see a term, which needs to be translated better, please submit a fix via Localazy . License All contributions to Waldur can be accepted only you agree to license your contribution under the MIT license. Please make sure that you have the right to sign off code as MIT. Code repositories Repository Description HomePort Code of Waldur Homeport web interface MasterMind Code of Waldur Mastermind orchestrator Helm package Helm packaging of Waldur for Kubernetes Docker-compose Docker-compose packaging of Waldur Ansible module Ansible module for Waldur APIs","title":"Contributing"},{"location":"about/contributing.html#contributing","text":"Waldur is an open project welcoming contributions. To assure the smooth acceptance of contributions please review the contribution guidelines below.","title":"Contributing"},{"location":"about/contributing.html#pull-requests","text":"We welcome contributions (patches, new features, translations, etc) through pull requests. Please make sure that the following is addressed when making a pull request: a request has a clear scope - new feature, bugfix, refactoring. Granular pull requests make integration much faster; the code is following code conventions of the corresponding platform and linters / tests are passing;","title":"Pull requests"},{"location":"about/contributing.html#localisation","text":"If you see a term, which needs to be translated better, please submit a fix via Localazy .","title":"Localisation"},{"location":"about/contributing.html#license","text":"All contributions to Waldur can be accepted only you agree to license your contribution under the MIT license. Please make sure that you have the right to sign off code as MIT.","title":"License"},{"location":"about/contributing.html#code-repositories","text":"Repository Description HomePort Code of Waldur Homeport web interface MasterMind Code of Waldur Mastermind orchestrator Helm package Helm packaging of Waldur for Kubernetes Docker-compose Docker-compose packaging of Waldur Ansible module Ansible module for Waldur APIs","title":"Code repositories"},{"location":"about/governance.html","text":"Governance Waldur is a project developed primarily by OpenNode with contributions from different organizations. To make sure that the project is delivering a sound product, OpenNode maintains control over the authoritative source code and covers Product owner and Architect roles (see below). Waldur and all of its components are released under MIT license to be as friendly towards ecosystem as possible. Overview of the development process Waldur team tries to maintain a transparent process of development. In a team, each person can have one or more of the roles below. Roles Project manager - collects and provides requirements for a particular Waldur-based project. Multiple people can have this role. Product owner - analysis requirements from project managers and fits into a product roadmap. Maintains technical feature list. Single person at a time can have this role. Architect - oversees Waldur platform development, including backend, frontend, external tools. Has a final word on the way how components are integrated. Single person at a time can have this role. Developer - responsible for fulfilling tasks created. Multiple people can have this role. Workflow Project manager communicates with customers, defines requirements for product owner. Product owner analyses requirements from all projects and creates epics for technical features implementation. Epics are assigned to the architect. Architect defines general development plan for features from product owner, adds description to the epic and creates separate tasks or stories for component owners. Developers process tasks. Product owner releases tagged versions of the product once a certain amount of functionality or bugfixes went in.","title":"Governance"},{"location":"about/governance.html#governance","text":"Waldur is a project developed primarily by OpenNode with contributions from different organizations. To make sure that the project is delivering a sound product, OpenNode maintains control over the authoritative source code and covers Product owner and Architect roles (see below). Waldur and all of its components are released under MIT license to be as friendly towards ecosystem as possible.","title":"Governance"},{"location":"about/governance.html#overview-of-the-development-process","text":"Waldur team tries to maintain a transparent process of development. In a team, each person can have one or more of the roles below.","title":"Overview of the development process"},{"location":"about/governance.html#roles","text":"Project manager - collects and provides requirements for a particular Waldur-based project. Multiple people can have this role. Product owner - analysis requirements from project managers and fits into a product roadmap. Maintains technical feature list. Single person at a time can have this role. Architect - oversees Waldur platform development, including backend, frontend, external tools. Has a final word on the way how components are integrated. Single person at a time can have this role. Developer - responsible for fulfilling tasks created. Multiple people can have this role.","title":"Roles"},{"location":"about/governance.html#workflow","text":"Project manager communicates with customers, defines requirements for product owner. Product owner analyses requirements from all projects and creates epics for technical features implementation. Epics are assigned to the architect. Architect defines general development plan for features from product owner, adds description to the epic and creates separate tasks or stories for component owners. Developers process tasks. Product owner releases tagged versions of the product once a certain amount of functionality or bugfixes went in.","title":"Workflow"},{"location":"about/reporting-issues.html","text":"Reporting issues No software is perfect and issues are to be expected. If you observe something that you think needs fixing, please provide issue report, which includes: From HomePort : HAR request that has failed or that contains data required for rendering of the data. What is HAR Zendesk instructions for generating a HAR Box instructions for generating a HAR Screenshot of the error in a high enough resolution. From MasterMind : Latest mastermind logs that include stacktrace of the error, typically core.log and celery-celery.log . Warning Logs may contain sensitive data, please make sure that you either cleanup the data or share it with a trusted party before sharing the actual data.","title":"Reporting issues"},{"location":"about/reporting-issues.html#reporting-issues","text":"No software is perfect and issues are to be expected. If you observe something that you think needs fixing, please provide issue report, which includes: From HomePort : HAR request that has failed or that contains data required for rendering of the data. What is HAR Zendesk instructions for generating a HAR Box instructions for generating a HAR Screenshot of the error in a high enough resolution. From MasterMind : Latest mastermind logs that include stacktrace of the error, typically core.log and celery-celery.log . Warning Logs may contain sensitive data, please make sure that you either cleanup the data or share it with a trusted party before sharing the actual data.","title":"Reporting issues"},{"location":"about/roadmap.html","text":"Roadmap Disclaimer This document is a living document and is used for planning. Plans for the unreleased features can change without further notice and hence cannot be used as a guaranteed delivery plan, the features can be delivered both earlier and later. Roadmap is created based on the backlog and requests from the existing users of Waldur. If you are interested in a specific topic, please reach out to us. Some of the tasks are common and some are functional, listed below. Continuous improvements Documentation There is no such thing as a perfect documentation so we are constantly working on improving it. CI/CD We believe that automation is a key to improving quality of code and happiness of developers, so we are constantly working on improving CI/CD related aspects. Tests A good software is a reliable software, so we are always trying to add more sensible tests. Functional The list below is based on the Epics maintained in Waldur's task manager. They are labelled with domains, which have requested them. Domains are: Generic - Common requirements, no extra label. Academia - originating from the research community; Commercial - originating from the commercial deployments; Government - originating from the public sector deployments. Open or in progress Code Description Domain WAL-4077 Integrate external quality metrics of Data repositories with Offerings WAL-4074 FAIR Offerings - background linking of offering PIDs with published articles Academia WAL-4073 FAIR-services - add reminders for users about referrals of consumed resources via PIDs Academia WAL-4072 Expose summaries of Offerings publicly Academia WAL-4000 Allow to limit visibility of Offering by service provider Academia Commercial WAL-3999 Support for customer credits Academia Commercial Government WAL-3997 Add common limit management support to HomePort Academia Commercial WAL-3987 Extensions to SLURM module Academia WAL-3964 Implement consolidated approach for remote user accounts management in marketplace offerings Academia WAL-3963 Make order confirmation message a common functionality for all Marketplace Academia Government WAL-3951 Implement more fine grained storage of user name WAL-3943 Shared Openstack Tenant provider phase I Academia WAL-3934 Functionality specific to deployment of Waldur in Puhuri project as Core Academia WAL-3811 Improvements to feedback collection Government WAL-3805 Direct LDAP support for Linux identity Academia WAL-3793 Tasks related to simplification of the invoice model Government WAL-3788 Add ability to see popularity of an offering from the list WAL-3759 Add support of versioning for core objects Government WAL-3744 Add support for creating / managing projects and resources through API of external Waldur Academia WAL-3736 Allow protecting resources from accidental deletion Government WAL-3689 Expose list of connected VMs for each security group Government WAL-3626 Add ability to generate API docs for select endpoints Academia WAL-3625 Migrate from Issue types to Request types for Jira support backend Government WAL-3606 Introduce Organization level service manager role Government WAL-3596 Allow logins to Rancher via keycloak Academia Government WAL-3595 Expose port management for OpenStack tenant Government WAL-3589 Expose Sankey diagram with costs and Service providers Academia WAL-3585 Rancher access group management Academia Government WAL-3582 Allow editing of invoice data for staff users Government WAL-3563 Tasks related for getting Puhuri Core to work Academia WAL-3524 Add support for sending notifications to users Commercial WAL-3439 Add support for bookmarking offerings as favourites Academia WAL-3400 Tasks related to gitlab dev pipelines WAL-3339 Offerings (Reporting) WAL-3334 Introduce vault for storing secret configuration in Waldur WAL-3305 Chart for creating overview of existing organizations WAL-3285 \"Some of the services suggest purchasing of connected offerings To Do WAL-3272 Allow setting limit for the maximal size of the total volume type quota Academia WAL-3218 Payment profiles (Phase III) WAL-3205 UX stabilization (phase I) WAL-3195 Improvements to the request-based item UX WAL-3136 Marketplace Checklists (phase II) Commercial WAL-3135 Support for auto-scalability of Waldur running on K8S WAL-3103 Second phase of support for virtual routers in OpenStack. Academia Government WAL-3076 Extend current model with ability to attach VMs directly to external networks Academia Commercial WAL-3072 Support for operations on multiple objects Commercial WAL-3005 Followup tasks for payment profiles Government WAL-2991 Markeplace Scripts plugin phase I Academia Commercial WAL-2965 Enhancements to properly support virtual security gateway use-case Government WAL-2961 Tasks related to Kubernetes ON service development and operation Government WAL-2922 Tasks for exposing Offerings publicly Academia WAL-2921 Extending Organization extended payment options Government WAL-2920 Tasks related for extending Waldur with ability to assess compliancy of organizations WAL-2850 Extending Rancher to support Helm charts Government WAL-2843 Tasks related to building up monitoring for EOSC Academia WAL-2780 Integration of PID services with Waldur models Academia WAL-2776 A visual checklist for making sure that things are done for the project Government WAL-2749 Tasks connected to improving security of Waldur WAL-2748 Collection of tasks aimed at improving UX of Waldur WAL-2747 Operational tools for Waldur deployments WAL-2676 System for lightweight offering management WAL-2637 Support for creating Rancher clusters Academia WAL-2623 Introduce license support for OpenStack Commercial WAL-2519 Improvements to VMware plugin Commercial WAL-2401 Implement device booking feature Academia WAL-2134 Further developments of Marketplace WAL-1442 Enhancements to Waldur for service provider visibility Commercial WAL-1309 Implement backend and frontend support for managing JIRA as a provider and issues as resources WAL-1262 Efforts for getting Waldur into Redhat container store WAL-1212 Reanimate Zabbix plugin WAL-1056 IPv6 support for OpenStack provider Academia Commercial Government WAL-868 Refactor cost tracking WAL-842 On-demand demo environment from waldur.com WAL-791 Stress testing & Profiling (vol 1) WAL-500 Waldur-specifics for ISKE H audit Government WAL-198 Resource retention management Academia Commercial Government WAL-44 Navigation FTS WAL-30 Quick alerts Finished or discarded Code Description Domain WAL-3998 Add i18n support WAL-3976 Allow setting end of life for project WAL-3850 Convert OrderItems and Invoices PDF to on-the-fly generation WAL-3833 Add an intro header to the personal dashboard WAL-3804 Slurm user list WAL-3710 Add support for tracking historical changes to important models WAL-3592 Expose measured units in invoice details WAL-3587 Render component usage as charts in homeport WAL-3579 Support for description for Secgroup Rules WAL-3551 Extensions to request-based item offerings to support Puhuri cases WAL-3523 Add regular reminders for reviewing membership data of users WAL-3520 Add a minimal privilege project member role WAL-3497 Trello integration for feature requests WAL-3466 Support editing of organizations in homeport WAL-3407 Extension of checklists to personalized ones WAL-3306 Growth chart shows changes over time of usage Academia WAL-3297 Financial overview improvements WAL-3294 Actions for setting up Waldur at VU WAL-3197 ITA PKI extension improvements WAL-3096 Add support for OpenStack Router Academia Government WAL-3022 Redesign of slurm module WAL-2989 Reports visible to support WAL-2967 Basic feature to track quality of handling of a ticket WAL-2666 Extending OpenStack integration with separate pricing for different volume types WAL-2646 Tickets related to extension of OpenStack driver WAL-2596 Drop OpenStack packages WAL-2590 Tasks related to VMware that are need additional analysis WAL-2491 VMware plugin WAL-2025 Tasks related to extension of MasterMind API for BDG SSP WAL-1988 Marketplace (3) WAL-1808 Waldur Marketplace (Phase 2) WAL-1640 Extension of ansible SDK with additional operations WAL-1568 Migrate tables to React WAL-1523 Waldur Marketplace (Phase I) WAL-1504 Implement basic support for Dutch government cloud in Waldur WAL-1402 Add support for MOAB provider WAL-1289 Add support for Jira attachments WAL-1288 Support view of users WAL-1286 Add support for LDAP-based authentication backends WAL-1255 Add support for Staff only VPC management WAL-1113 Paypal support WAL-1095 Basic Azure VM provider WAL-1060 Waldur goes to K8S WAL-1058 Resource import WAL-969 Expert provider extension WAL-962 Add organization self-registration WAL-925 Add eduGain support for authentication WAL-903 Improvements to invoice / accounting WAL-839 Miration to ES 5.x WAL-834 Migrate to Django 1.11 WAL-833 Create a PoC for Expert provider WAL-832 Ansible module for Waldur WAL-793 2nd phase of Grafana dashboards WAL-790 Add ability to set cost limit on organization WAL-751 Support for Ansible-playbooks as application providers WAL-730 Waldur Mission Control (central management for Waldurs) WAL-722 LDAP-based SSH access provider WAL-713 Add TaaT authentication provider to Waldur WAL-701 Notifications WAL-686 Add support for smartid.ee IdP WAL-604 Basic support mode WAL-597 /admin improvements WAL-596 HomePort localization WAL-595 API Documentation WAL-568 Grafana dashbord (for operators) WAL-566 Predictive analysis for capacity planning (organization-view) WAL-511 Fixes for a broken network model WAL-479 Price estimation WAL-468 Admin and user guides (initial) WAL-463 Extended backup restoration WAL-462 Extend snapshot management WAL-461 Basic resource usage view WAL-454 R: Update django to 1.9. WAL-396 OpenStack providers pricing info WAL-323 Use neutron for network operations. WAL-297 Project policies WAL-289 Optimizer for IaaS resource selection WAL-287 Renaming of artifacts to Waldur WAL-270 OpenStack Tenant dashboard access WAL-262 OpenStack Tenant Network Management WAL-259 OpenStack Instance Access Management WAL-213 Basic policy support WAL-199 Provider details WAL-197 Customer support WAL-169 API Token management WAL-168 Extended membership management capabilities WAL-106 Refactoring: Update DRF version. WAL-88 Transactional event logs WAL-82 Controls for user profile updates WAL-79 Tenant Management WAL-77 Request-based Offerings WAL-76 Billing WAL-75 Audit log WAL-68 Waldur ServiceStore WAL-43 Waldur white-labelling WAL-42 Resource state display WAL-41 Registration WAL-17 Waldur HomePort L&F WAL-15 Waldur web page WAL-9 OpenStack VM backup management WAL-8 OpenStack Storage management WAL-7 OpenStack Instance management WAL-6 Waldur HomePort navigation WAL-4 VPC / OpenStack Tenant purchase WAL-3 Organization team management WAL-2 I want to be able to manage my SSH keys","title":"Roadmap"},{"location":"about/roadmap.html#roadmap","text":"","title":"Roadmap"},{"location":"about/roadmap.html#disclaimer","text":"This document is a living document and is used for planning. Plans for the unreleased features can change without further notice and hence cannot be used as a guaranteed delivery plan, the features can be delivered both earlier and later. Roadmap is created based on the backlog and requests from the existing users of Waldur. If you are interested in a specific topic, please reach out to us. Some of the tasks are common and some are functional, listed below.","title":"Disclaimer"},{"location":"about/roadmap.html#continuous-improvements","text":"","title":"Continuous improvements"},{"location":"about/roadmap.html#documentation","text":"There is no such thing as a perfect documentation so we are constantly working on improving it.","title":"Documentation"},{"location":"about/roadmap.html#cicd","text":"We believe that automation is a key to improving quality of code and happiness of developers, so we are constantly working on improving CI/CD related aspects.","title":"CI/CD"},{"location":"about/roadmap.html#tests","text":"A good software is a reliable software, so we are always trying to add more sensible tests.","title":"Tests"},{"location":"about/roadmap.html#functional","text":"The list below is based on the Epics maintained in Waldur's task manager. They are labelled with domains, which have requested them. Domains are: Generic - Common requirements, no extra label. Academia - originating from the research community; Commercial - originating from the commercial deployments; Government - originating from the public sector deployments.","title":"Functional"},{"location":"about/roadmap.html#open-or-in-progress","text":"Code Description Domain WAL-4077 Integrate external quality metrics of Data repositories with Offerings WAL-4074 FAIR Offerings - background linking of offering PIDs with published articles Academia WAL-4073 FAIR-services - add reminders for users about referrals of consumed resources via PIDs Academia WAL-4072 Expose summaries of Offerings publicly Academia WAL-4000 Allow to limit visibility of Offering by service provider Academia Commercial WAL-3999 Support for customer credits Academia Commercial Government WAL-3997 Add common limit management support to HomePort Academia Commercial WAL-3987 Extensions to SLURM module Academia WAL-3964 Implement consolidated approach for remote user accounts management in marketplace offerings Academia WAL-3963 Make order confirmation message a common functionality for all Marketplace Academia Government WAL-3951 Implement more fine grained storage of user name WAL-3943 Shared Openstack Tenant provider phase I Academia WAL-3934 Functionality specific to deployment of Waldur in Puhuri project as Core Academia WAL-3811 Improvements to feedback collection Government WAL-3805 Direct LDAP support for Linux identity Academia WAL-3793 Tasks related to simplification of the invoice model Government WAL-3788 Add ability to see popularity of an offering from the list WAL-3759 Add support of versioning for core objects Government WAL-3744 Add support for creating / managing projects and resources through API of external Waldur Academia WAL-3736 Allow protecting resources from accidental deletion Government WAL-3689 Expose list of connected VMs for each security group Government WAL-3626 Add ability to generate API docs for select endpoints Academia WAL-3625 Migrate from Issue types to Request types for Jira support backend Government WAL-3606 Introduce Organization level service manager role Government WAL-3596 Allow logins to Rancher via keycloak Academia Government WAL-3595 Expose port management for OpenStack tenant Government WAL-3589 Expose Sankey diagram with costs and Service providers Academia WAL-3585 Rancher access group management Academia Government WAL-3582 Allow editing of invoice data for staff users Government WAL-3563 Tasks related for getting Puhuri Core to work Academia WAL-3524 Add support for sending notifications to users Commercial WAL-3439 Add support for bookmarking offerings as favourites Academia WAL-3400 Tasks related to gitlab dev pipelines WAL-3339 Offerings (Reporting) WAL-3334 Introduce vault for storing secret configuration in Waldur WAL-3305 Chart for creating overview of existing organizations WAL-3285 \"Some of the services suggest purchasing of connected offerings To Do WAL-3272 Allow setting limit for the maximal size of the total volume type quota Academia WAL-3218 Payment profiles (Phase III) WAL-3205 UX stabilization (phase I) WAL-3195 Improvements to the request-based item UX WAL-3136 Marketplace Checklists (phase II) Commercial WAL-3135 Support for auto-scalability of Waldur running on K8S WAL-3103 Second phase of support for virtual routers in OpenStack. Academia Government WAL-3076 Extend current model with ability to attach VMs directly to external networks Academia Commercial WAL-3072 Support for operations on multiple objects Commercial WAL-3005 Followup tasks for payment profiles Government WAL-2991 Markeplace Scripts plugin phase I Academia Commercial WAL-2965 Enhancements to properly support virtual security gateway use-case Government WAL-2961 Tasks related to Kubernetes ON service development and operation Government WAL-2922 Tasks for exposing Offerings publicly Academia WAL-2921 Extending Organization extended payment options Government WAL-2920 Tasks related for extending Waldur with ability to assess compliancy of organizations WAL-2850 Extending Rancher to support Helm charts Government WAL-2843 Tasks related to building up monitoring for EOSC Academia WAL-2780 Integration of PID services with Waldur models Academia WAL-2776 A visual checklist for making sure that things are done for the project Government WAL-2749 Tasks connected to improving security of Waldur WAL-2748 Collection of tasks aimed at improving UX of Waldur WAL-2747 Operational tools for Waldur deployments WAL-2676 System for lightweight offering management WAL-2637 Support for creating Rancher clusters Academia WAL-2623 Introduce license support for OpenStack Commercial WAL-2519 Improvements to VMware plugin Commercial WAL-2401 Implement device booking feature Academia WAL-2134 Further developments of Marketplace WAL-1442 Enhancements to Waldur for service provider visibility Commercial WAL-1309 Implement backend and frontend support for managing JIRA as a provider and issues as resources WAL-1262 Efforts for getting Waldur into Redhat container store WAL-1212 Reanimate Zabbix plugin WAL-1056 IPv6 support for OpenStack provider Academia Commercial Government WAL-868 Refactor cost tracking WAL-842 On-demand demo environment from waldur.com WAL-791 Stress testing & Profiling (vol 1) WAL-500 Waldur-specifics for ISKE H audit Government WAL-198 Resource retention management Academia Commercial Government WAL-44 Navigation FTS WAL-30 Quick alerts","title":"Open or  in progress"},{"location":"about/roadmap.html#finished-or-discarded","text":"Code Description Domain WAL-3998 Add i18n support WAL-3976 Allow setting end of life for project WAL-3850 Convert OrderItems and Invoices PDF to on-the-fly generation WAL-3833 Add an intro header to the personal dashboard WAL-3804 Slurm user list WAL-3710 Add support for tracking historical changes to important models WAL-3592 Expose measured units in invoice details WAL-3587 Render component usage as charts in homeport WAL-3579 Support for description for Secgroup Rules WAL-3551 Extensions to request-based item offerings to support Puhuri cases WAL-3523 Add regular reminders for reviewing membership data of users WAL-3520 Add a minimal privilege project member role WAL-3497 Trello integration for feature requests WAL-3466 Support editing of organizations in homeport WAL-3407 Extension of checklists to personalized ones WAL-3306 Growth chart shows changes over time of usage Academia WAL-3297 Financial overview improvements WAL-3294 Actions for setting up Waldur at VU WAL-3197 ITA PKI extension improvements WAL-3096 Add support for OpenStack Router Academia Government WAL-3022 Redesign of slurm module WAL-2989 Reports visible to support WAL-2967 Basic feature to track quality of handling of a ticket WAL-2666 Extending OpenStack integration with separate pricing for different volume types WAL-2646 Tickets related to extension of OpenStack driver WAL-2596 Drop OpenStack packages WAL-2590 Tasks related to VMware that are need additional analysis WAL-2491 VMware plugin WAL-2025 Tasks related to extension of MasterMind API for BDG SSP WAL-1988 Marketplace (3) WAL-1808 Waldur Marketplace (Phase 2) WAL-1640 Extension of ansible SDK with additional operations WAL-1568 Migrate tables to React WAL-1523 Waldur Marketplace (Phase I) WAL-1504 Implement basic support for Dutch government cloud in Waldur WAL-1402 Add support for MOAB provider WAL-1289 Add support for Jira attachments WAL-1288 Support view of users WAL-1286 Add support for LDAP-based authentication backends WAL-1255 Add support for Staff only VPC management WAL-1113 Paypal support WAL-1095 Basic Azure VM provider WAL-1060 Waldur goes to K8S WAL-1058 Resource import WAL-969 Expert provider extension WAL-962 Add organization self-registration WAL-925 Add eduGain support for authentication WAL-903 Improvements to invoice / accounting WAL-839 Miration to ES 5.x WAL-834 Migrate to Django 1.11 WAL-833 Create a PoC for Expert provider WAL-832 Ansible module for Waldur WAL-793 2nd phase of Grafana dashboards WAL-790 Add ability to set cost limit on organization WAL-751 Support for Ansible-playbooks as application providers WAL-730 Waldur Mission Control (central management for Waldurs) WAL-722 LDAP-based SSH access provider WAL-713 Add TaaT authentication provider to Waldur WAL-701 Notifications WAL-686 Add support for smartid.ee IdP WAL-604 Basic support mode WAL-597 /admin improvements WAL-596 HomePort localization WAL-595 API Documentation WAL-568 Grafana dashbord (for operators) WAL-566 Predictive analysis for capacity planning (organization-view) WAL-511 Fixes for a broken network model WAL-479 Price estimation WAL-468 Admin and user guides (initial) WAL-463 Extended backup restoration WAL-462 Extend snapshot management WAL-461 Basic resource usage view WAL-454 R: Update django to 1.9. WAL-396 OpenStack providers pricing info WAL-323 Use neutron for network operations. WAL-297 Project policies WAL-289 Optimizer for IaaS resource selection WAL-287 Renaming of artifacts to Waldur WAL-270 OpenStack Tenant dashboard access WAL-262 OpenStack Tenant Network Management WAL-259 OpenStack Instance Access Management WAL-213 Basic policy support WAL-199 Provider details WAL-197 Customer support WAL-169 API Token management WAL-168 Extended membership management capabilities WAL-106 Refactoring: Update DRF version. WAL-88 Transactional event logs WAL-82 Controls for user profile updates WAL-79 Tenant Management WAL-77 Request-based Offerings WAL-76 Billing WAL-75 Audit log WAL-68 Waldur ServiceStore WAL-43 Waldur white-labelling WAL-42 Resource state display WAL-41 Registration WAL-17 Waldur HomePort L&F WAL-15 Waldur web page WAL-9 OpenStack VM backup management WAL-8 OpenStack Storage management WAL-7 OpenStack Instance management WAL-6 Waldur HomePort navigation WAL-4 VPC / OpenStack Tenant purchase WAL-3 Organization team management WAL-2 I want to be able to manage my SSH keys","title":"Finished or discarded"},{"location":"about/screenshots.html","text":"Screenshots Login page Organization workspace Project workspace Support workspace Marketplace","title":"Screenshots"},{"location":"about/screenshots.html#screenshots","text":"","title":"Screenshots"},{"location":"about/screenshots.html#login-page","text":"","title":"Login page"},{"location":"about/screenshots.html#organization-workspace","text":"","title":"Organization workspace"},{"location":"about/screenshots.html#project-workspace","text":"","title":"Project workspace"},{"location":"about/screenshots.html#support-workspace","text":"","title":"Support workspace"},{"location":"about/screenshots.html#marketplace","text":"","title":"Marketplace"},{"location":"about/support.html","text":"Support Waldur is an open-source project co-developed by OpenNode and University of Tartu . Support and sponsored development OpenNode provides several options for support with varying SLAs. If you would like to know more, reach out ! Managed hosting for academical institutions Please reach out to support@hpc.ut.ee if you represent an R&D organization and interested in managed Waldur hosting.","title":"Support"},{"location":"about/support.html#support","text":"Waldur is an open-source project co-developed by OpenNode and University of Tartu .","title":"Support"},{"location":"about/support.html#support-and-sponsored-development","text":"OpenNode provides several options for support with varying SLAs. If you would like to know more, reach out !","title":"Support and sponsored development"},{"location":"about/support.html#managed-hosting-for-academical-institutions","text":"Please reach out to support@hpc.ut.ee if you represent an R&D organization and interested in managed Waldur hosting.","title":"Managed hosting for academical institutions"},{"location":"admin-guide/architecture.html","text":"Architecture Waldur is composed of a several components. Homeport (web client, graphical interface) - React application Mastermind API server - Django/Django REST Framework application implementing the core business logic Celery workers - Background processing of tasks Celery beat - Scheduling of periodic tasks for background processing PostgreSQL database - Storing persistent data, also serves as Celery result store in Kubernetes deployment Redis - Tasks queue and result store for Celery (Docker Compose deployment only) RabbitMQ - Tasks queue and result store for Celery (Kubernetes deployment only)","title":"Architecture"},{"location":"admin-guide/architecture.html#architecture","text":"Waldur is composed of a several components. Homeport (web client, graphical interface) - React application Mastermind API server - Django/Django REST Framework application implementing the core business logic Celery workers - Background processing of tasks Celery beat - Scheduling of periodic tasks for background processing PostgreSQL database - Storing persistent data, also serves as Celery result store in Kubernetes deployment Redis - Tasks queue and result store for Celery (Docker Compose deployment only) RabbitMQ - Tasks queue and result store for Celery (Kubernetes deployment only)","title":"Architecture"},{"location":"admin-guide/backups.html","text":"Backups Waldur keeps state in 2 components: Database - main persistency layer. Message queue - contains transient data mostly about scheduled jobs and cache. Of these, only database needs to be backed up. A typical approach to a backup is: 1. Create a DB dump. 1 2 3 4 5 6 7 8 9 10 11 12 1. An entire db dump ```bash docker exec -t waldur-db pg_dump -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ``` 2. An entire db dump with cleanup commands: ```bash docker exec -t waldur-db pg_dump --clean -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ``` 3. A db dump containing only data ```bash docker exec -t waldur-db pg_dump -a -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ``` 2. Copy backup to a remote location. Using rsync / scp or more specialised tools. 3. Restore the created backup. 1 cat waldur-backup.sql | docker exec -i waldur-db psql -U waldur We suggest to make sure that backups are running regularly, e.g. using cron.","title":"Backups"},{"location":"admin-guide/backups.html#backups","text":"Waldur keeps state in 2 components: Database - main persistency layer. Message queue - contains transient data mostly about scheduled jobs and cache. Of these, only database needs to be backed up. A typical approach to a backup is:","title":"Backups"},{"location":"admin-guide/backups.html#1-create-a-db-dump","text":"1 2 3 4 5 6 7 8 9 10 11 12 1. An entire db dump ```bash docker exec -t waldur-db pg_dump -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ``` 2. An entire db dump with cleanup commands: ```bash docker exec -t waldur-db pg_dump --clean -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ``` 3. A db dump containing only data ```bash docker exec -t waldur-db pg_dump -a -U waldur waldur | gzip -9 > waldur-$(date +'%Y%m%dT%H%M%S').sql.gz ```","title":"1. Create a DB dump."},{"location":"admin-guide/backups.html#2-copy-backup-to-a-remote-location","text":"Using rsync / scp or more specialised tools.","title":"2. Copy backup to a remote location."},{"location":"admin-guide/backups.html#3-restore-the-created-backup","text":"1 cat waldur-backup.sql | docker exec -i waldur-db psql -U waldur We suggest to make sure that backups are running regularly, e.g. using cron.","title":"3. Restore the created backup."},{"location":"admin-guide/checklist-for-production.html","text":"Checklist for Go live General Make sure that privacy policy and terms of use are updated to the site specific ones. Make sure that SMTP server and outgoing email address are configured and emails are sent out. Reboot test: restart all the nodes where Waldur components are running, application should recover automatically. Security Remove or disable default staff accounts. Generate a new random secret key. Backups Make sure that configuration of Waldur is backed up and versioned. Assure that DB backups are performed, i.e. backups are created when manually triggering. Assure that DB backups files are on a persistent storage, preferably outside the storage used for Waldur's database. Air-gapped deployments Make sure that Waldur docker images are mirrored to a local registry.","title":"Checklist for Go live"},{"location":"admin-guide/checklist-for-production.html#checklist-for-go-live","text":"","title":"Checklist for Go live"},{"location":"admin-guide/checklist-for-production.html#general","text":"Make sure that privacy policy and terms of use are updated to the site specific ones. Make sure that SMTP server and outgoing email address are configured and emails are sent out. Reboot test: restart all the nodes where Waldur components are running, application should recover automatically.","title":"General"},{"location":"admin-guide/checklist-for-production.html#security","text":"Remove or disable default staff accounts. Generate a new random secret key.","title":"Security"},{"location":"admin-guide/checklist-for-production.html#backups","text":"Make sure that configuration of Waldur is backed up and versioned. Assure that DB backups are performed, i.e. backups are created when manually triggering. Assure that DB backups files are on a persistent storage, preferably outside the storage used for Waldur's database.","title":"Backups"},{"location":"admin-guide/checklist-for-production.html#air-gapped-deployments","text":"Make sure that Waldur docker images are mirrored to a local registry.","title":"Air-gapped deployments"},{"location":"admin-guide/cookie-policy.html","text":"Cookie policy Waldur can save data about the user in a browser. Data type and policy depends on the component. HomePort Saving of the latest view point of the user. Saving redirect information, i.e. where to forward from a certain state. Saving which authentication method was used by user for logging in. Saving user session token. Saving user language preference. MasterMind Saving authentication token (cookie) when a user logs into /admin management interface.","title":"Cookie policy"},{"location":"admin-guide/cookie-policy.html#cookie-policy","text":"Waldur can save data about the user in a browser. Data type and policy depends on the component.","title":"Cookie policy"},{"location":"admin-guide/cookie-policy.html#homeport","text":"Saving of the latest view point of the user. Saving redirect information, i.e. where to forward from a certain state. Saving which authentication method was used by user for logging in. Saving user session token. Saving user language preference.","title":"HomePort"},{"location":"admin-guide/cookie-policy.html#mastermind","text":"Saving authentication token (cookie) when a user logs into /admin management interface.","title":"MasterMind"},{"location":"admin-guide/hardware-requirements.html","text":"Hardware requirements Docker-compose deployment (on a single server) Docker version: 1.13+ Minimal configuration: 4 vCPU, 8 GB RAM Helm-based deployment Kubernetes version: 1.18+ Minimal namespace limits: TODO Component specific requirements Waldur Mastermind (API) By default 4 uWSGI processes are started. - Minimum requirements: 1 CPU, 1GB RAM for every node - Recommended setup: 2 CPU or more, 2 GB RAM or more Waldur Mastermind (Celery worker) By default a single worker with 10 threads is started. Minimum requirements: 2 CPU, 1 GB RAM Recommended setup: 4 CPU or more, 8 GB RAM or more More memory should be added if more Celery worker processes are running on the same host (512 MB for each 4 Celery workers). Waldur Mastermind (Celery beat) A single Celery beat process is started. Minimum and recommended requirements: 1 CPU, 1 GB RAM PostgreSQL Minimum requirements: 1 CPU, 1 GB RAM Recommended setup: 2 CPU or more, 2 GB RAM or more Redis Minimum requirements: 1 CPU, 512 MB RAM Recommended setup: 2 CPU or more, 1 GB RAM or more Waldur HomePort (Nginx) Minimum and recommended requirements: 1 CPU and 512MB RAM","title":"Hardware requirements"},{"location":"admin-guide/hardware-requirements.html#hardware-requirements","text":"","title":"Hardware requirements"},{"location":"admin-guide/hardware-requirements.html#docker-compose-deployment-on-a-single-server","text":"Docker version: 1.13+ Minimal configuration: 4 vCPU, 8 GB RAM","title":"Docker-compose deployment (on a single server)"},{"location":"admin-guide/hardware-requirements.html#helm-based-deployment","text":"Kubernetes version: 1.18+ Minimal namespace limits: TODO","title":"Helm-based deployment"},{"location":"admin-guide/hardware-requirements.html#component-specific-requirements","text":"","title":"Component specific requirements"},{"location":"admin-guide/hardware-requirements.html#waldur-mastermind-api","text":"By default 4 uWSGI processes are started. - Minimum requirements: 1 CPU, 1GB RAM for every node - Recommended setup: 2 CPU or more, 2 GB RAM or more","title":"Waldur Mastermind (API)"},{"location":"admin-guide/hardware-requirements.html#waldur-mastermind-celery-worker","text":"By default a single worker with 10 threads is started. Minimum requirements: 2 CPU, 1 GB RAM Recommended setup: 4 CPU or more, 8 GB RAM or more More memory should be added if more Celery worker processes are running on the same host (512 MB for each 4 Celery workers).","title":"Waldur Mastermind (Celery worker)"},{"location":"admin-guide/hardware-requirements.html#waldur-mastermind-celery-beat","text":"A single Celery beat process is started. Minimum and recommended requirements: 1 CPU, 1 GB RAM","title":"Waldur Mastermind (Celery beat)"},{"location":"admin-guide/hardware-requirements.html#postgresql","text":"Minimum requirements: 1 CPU, 1 GB RAM Recommended setup: 2 CPU or more, 2 GB RAM or more","title":"PostgreSQL"},{"location":"admin-guide/hardware-requirements.html#redis","text":"Minimum requirements: 1 CPU, 512 MB RAM Recommended setup: 2 CPU or more, 1 GB RAM or more","title":"Redis"},{"location":"admin-guide/hardware-requirements.html#waldur-homeport-nginx","text":"Minimum and recommended requirements: 1 CPU and 512MB RAM","title":"Waldur HomePort (Nginx)"},{"location":"admin-guide/managing-with-ansible.html","text":"Managing Waldur with Ansible NB! Repository with Ansible playbooks for Waldur management is not open-sourced. It is available to Waldur users that have purchased support packages. Compatibility Ansible version 2.9 is supported; code in this repository may work with other Ansible versions but it is not guaranteed. Quick setup Make sure that you have: Folder containing managed-ansible Ansible installer (this one). Folder containing deployment-specific settings. Copy setup_deployment.sh.example to setup_deployment.sh , adjust: INSTALLER_PATH - full path to current folder DEPLOYMENT_CONFIG_PATH - full path to folder with deployment-specific information DEPLOYMENT_IDS - list of deployment IDs you want to manage. Run ./setup_deployment.sh. This will create required symlinks. Run ansible-playbook -DC <deployment_id.yml> to check what installer will do. Run ansible-playbook -D <deployment_id.yml> to apply the installer. Upgrading installer Download a new archive into a separate folder and unpack. Check what has changed: rsync --dry-run -avzh unpacked-folder-eg-ansible-3.2.3/ /path/to/installer/ Do the upgrade: rsync -avzh unpacked-folder-eg-ansible-3.2.3/ /path/to/installer/ Upgrading Waldur Upgrading Waldur to a new version is achieved by following the checklist: Update deployment-specific variables for the new version in groups_vars/<deployment_id>/vars and groups_vars/<deployment_id>/vault (if setting is private). Update target version in groups_vars/<deployment_id>/vars : set waldur_homeport_version and waldur_mastermind_version to a new version of the Waldur release. Run ansible-playbook -DC <deployment_id.yml> to check what installer will do during the upgrade. Run ansible-playbook -D <deployment_id.yml> to perform an upgrade. Add new deployment Infrastructure: Prepare servers matching requirements . Make sure you can access them by SSH by running only ssh <host> . Otherwise you should tweak ~/.ssh/config file or describe connectivity in the Ansible inventory. Ansible (this repository): Add new deployment-specific host group to hosts file (example: [foo] ); add hosts to this group. Add hosts to Waldur role groups in hosts file. Add variable files for new deployment: group_vars/foo/vars and group_vars/foo/vault Add deployment specific information under deployments folder. Copy existing playbook that is the closest match for a new deployment; modify as needed Run Ansible playbook to set up deployment: ansible-playbook -D foo.yml Remove deployment Ansible (this repository): Delete deployment-specific playbook, roles, tasks, templates etc. Delete variable files: rm -rf group_vars/foo Delete deployment-specific host group and all deployment-specific hosts from hosts file (example: [foo] ) Managing Waldur deployed as Helm Requirements: Installed and running kubernetes system on a node (e. g. minikube) Installed kubectl on the node Place all configuration files for release in next manner: values.yaml -> roles/waldur_helm/files/waldur_helm/waldur/ values.yaml -> roles/waldur_helm/files/waldur_helm/waldur/ Files related to TLS -> deployments/<deployment_id>/tls/ Files related to white-labeling -> deployments/<deployment_id>/whitelabeling/ Files related to mastermind templates -> deployments/<deployment_id>/mastermind_templates/ Files related to stress testing -> deployments/<deployment_id>/locust_tasks/ Files related to SAML2 -> deployments/<deployment_id>/waldur_saml2/ More configuration info: TLS White-labeling Mastermind templates","title":"Managing Waldur with Ansible"},{"location":"admin-guide/managing-with-ansible.html#managing-waldur-with-ansible","text":"NB! Repository with Ansible playbooks for Waldur management is not open-sourced. It is available to Waldur users that have purchased support packages.","title":"Managing Waldur with Ansible"},{"location":"admin-guide/managing-with-ansible.html#compatibility","text":"Ansible version 2.9 is supported; code in this repository may work with other Ansible versions but it is not guaranteed.","title":"Compatibility"},{"location":"admin-guide/managing-with-ansible.html#quick-setup","text":"Make sure that you have: Folder containing managed-ansible Ansible installer (this one). Folder containing deployment-specific settings. Copy setup_deployment.sh.example to setup_deployment.sh , adjust: INSTALLER_PATH - full path to current folder DEPLOYMENT_CONFIG_PATH - full path to folder with deployment-specific information DEPLOYMENT_IDS - list of deployment IDs you want to manage. Run ./setup_deployment.sh. This will create required symlinks. Run ansible-playbook -DC <deployment_id.yml> to check what installer will do. Run ansible-playbook -D <deployment_id.yml> to apply the installer.","title":"Quick setup"},{"location":"admin-guide/managing-with-ansible.html#upgrading-installer","text":"Download a new archive into a separate folder and unpack. Check what has changed: rsync --dry-run -avzh unpacked-folder-eg-ansible-3.2.3/ /path/to/installer/ Do the upgrade: rsync -avzh unpacked-folder-eg-ansible-3.2.3/ /path/to/installer/","title":"Upgrading installer"},{"location":"admin-guide/managing-with-ansible.html#upgrading-waldur","text":"Upgrading Waldur to a new version is achieved by following the checklist: Update deployment-specific variables for the new version in groups_vars/<deployment_id>/vars and groups_vars/<deployment_id>/vault (if setting is private). Update target version in groups_vars/<deployment_id>/vars : set waldur_homeport_version and waldur_mastermind_version to a new version of the Waldur release. Run ansible-playbook -DC <deployment_id.yml> to check what installer will do during the upgrade. Run ansible-playbook -D <deployment_id.yml> to perform an upgrade.","title":"Upgrading Waldur"},{"location":"admin-guide/managing-with-ansible.html#add-new-deployment","text":"Infrastructure: Prepare servers matching requirements . Make sure you can access them by SSH by running only ssh <host> . Otherwise you should tweak ~/.ssh/config file or describe connectivity in the Ansible inventory. Ansible (this repository): Add new deployment-specific host group to hosts file (example: [foo] ); add hosts to this group. Add hosts to Waldur role groups in hosts file. Add variable files for new deployment: group_vars/foo/vars and group_vars/foo/vault Add deployment specific information under deployments folder. Copy existing playbook that is the closest match for a new deployment; modify as needed Run Ansible playbook to set up deployment: ansible-playbook -D foo.yml","title":"Add new deployment"},{"location":"admin-guide/managing-with-ansible.html#remove-deployment","text":"Ansible (this repository): Delete deployment-specific playbook, roles, tasks, templates etc. Delete variable files: rm -rf group_vars/foo Delete deployment-specific host group and all deployment-specific hosts from hosts file (example: [foo] )","title":"Remove deployment"},{"location":"admin-guide/managing-with-ansible.html#managing-waldur-deployed-as-helm","text":"Requirements: Installed and running kubernetes system on a node (e. g. minikube) Installed kubectl on the node Place all configuration files for release in next manner: values.yaml -> roles/waldur_helm/files/waldur_helm/waldur/ values.yaml -> roles/waldur_helm/files/waldur_helm/waldur/ Files related to TLS -> deployments/<deployment_id>/tls/ Files related to white-labeling -> deployments/<deployment_id>/whitelabeling/ Files related to mastermind templates -> deployments/<deployment_id>/mastermind_templates/ Files related to stress testing -> deployments/<deployment_id>/locust_tasks/ Files related to SAML2 -> deployments/<deployment_id>/waldur_saml2/ More configuration info: TLS White-labeling Mastermind templates","title":"Managing Waldur deployed as Helm"},{"location":"admin-guide/deployment/docker-compose.html","text":"Waldur Docker-compose deployment Prerequisites at least 8GB RAM on Docker Host to run all containers Docker v1.13+ Prepare environment 1 2 3 4 5 # clone repo git clone https://github.com/waldur/waldur-docker-compose.git cd waldur-docker-compose # setup settings cp .env.example .env Booting up 1 2 3 4 5 6 7 8 9 # start containers docker-compose up -d # verify docker-compose ps docker exec -t waldur-mastermind-worker status # Create user docker exec -t waldur-mastermind-worker waldur createstaffuser -u admin -p password -e admin@example.com Waldur HomePort will be accessible on http://localhost . API will listen on http://localhost/api . Healthcheck can be accessed on http://localhost/health-check . Tearing down and cleaning up: 1 docker-compose down Upgrading Waldur 1 2 docker-compose pull docker-compose restart Using TLS Add private key and certificate to ./certs folder. Edit docker-compose.yml and replace port section with '80'. This is needed to force HTTP->HTTPS redirect from a TLS proxy: sed -i 's/${WALDUR_INTERNAL_PORT}:80/80/' docker-compose.yml . Start docker-compose with an extra TLS proxy: 1 2 # start containers docker-compose up -f docker-compose.yml -f tls-proxy.yml -d","title":"Waldur Docker-compose deployment"},{"location":"admin-guide/deployment/docker-compose.html#waldur-docker-compose-deployment","text":"","title":"Waldur Docker-compose deployment"},{"location":"admin-guide/deployment/docker-compose.html#prerequisites","text":"at least 8GB RAM on Docker Host to run all containers Docker v1.13+","title":"Prerequisites"},{"location":"admin-guide/deployment/docker-compose.html#prepare-environment","text":"1 2 3 4 5 # clone repo git clone https://github.com/waldur/waldur-docker-compose.git cd waldur-docker-compose # setup settings cp .env.example .env","title":"Prepare environment"},{"location":"admin-guide/deployment/docker-compose.html#booting-up","text":"1 2 3 4 5 6 7 8 9 # start containers docker-compose up -d # verify docker-compose ps docker exec -t waldur-mastermind-worker status # Create user docker exec -t waldur-mastermind-worker waldur createstaffuser -u admin -p password -e admin@example.com Waldur HomePort will be accessible on http://localhost . API will listen on http://localhost/api . Healthcheck can be accessed on http://localhost/health-check . Tearing down and cleaning up: 1 docker-compose down","title":"Booting up"},{"location":"admin-guide/deployment/docker-compose.html#upgrading-waldur","text":"1 2 docker-compose pull docker-compose restart","title":"Upgrading Waldur"},{"location":"admin-guide/deployment/docker-compose.html#using-tls","text":"Add private key and certificate to ./certs folder. Edit docker-compose.yml and replace port section with '80'. This is needed to force HTTP->HTTPS redirect from a TLS proxy: sed -i 's/${WALDUR_INTERNAL_PORT}:80/80/' docker-compose.yml . Start docker-compose with an extra TLS proxy: 1 2 # start containers docker-compose up -f docker-compose.yml -f tls-proxy.yml -d","title":"Using TLS"},{"location":"admin-guide/deployment/helm.html","text":"Waldur Helm Waldur publishes a Helm chart for easy deployment on a Kubernetes cluster using the Helm package manager. Installing prerequisites Install Kubernetes server. Install Kubernetes client, i.e. kubetctl. Install Helm Installing the Chart Add the stable repository 1 helm repo add stable https://charts.helm.sh/stable Install Chart dependencies: 1 helm dep update waldur Setup database: 3.1 Setup single PostgreSQL DB: instructions , or 3.2 Setup PostgreSQL HA DB: instructions NB Only one of these two options should be used. Otherwise, DB will be unavailable. 4. Install minio (for media): instructions 5. Install RabbitMQ for task queue: instructions 5. Install Helm package: 1 2 # in 'waldur-helm-poc/' helm install waldur waldur NB After this command, Waldur release will run in default namespace. Please, pay attention in which namespace which release is running. For instance, you can install Waldur release in test namespace in the following way: Create test namespace: 1 kubectl create namespace test Install release: 1 helm install waldur waldur --namespace test Adding admin user Open waldur-mastermind-worker shell and execute the following command: Get waldur-mastermind-worker pod name 1 2 3 # Example: kubectl get pods -A | grep waldur-mastermind-worker # --> # default waldur-mastermind-worker-6d98cd98bd-wps8n 1/1 Running 0 9m9s Connect to pod via shell 1 2 # Example: kubectl exec -it waldur-mastermind-worker-6d98cd98bd-wps8n -- /bin/bash Execute command to add admin user 1 waldur createstaffuser -u user -p password -e admin@example.com Waldur Helm chart release upgrading Delete initdb job (if exists): 1 kubectl delete job waldur-mastermind-initdb-job || true Upgrade Waldur dependencies and release: 1 2 helm dep update waldur/ helm upgrade waldur waldur/ Restart deployments to apply configmaps changes: 1 2 3 4 kubectl rollout restart deployment waldur-mastermind-beat kubectl rollout restart deployment waldur-mastermind-api kubectl rollout restart deployment waldur-mastermind-worker kubectl rollout restart deployment waldur-homeport","title":"Helm"},{"location":"admin-guide/deployment/helm.html#waldur-helm","text":"Waldur publishes a Helm chart for easy deployment on a Kubernetes cluster using the Helm package manager.","title":"Waldur Helm"},{"location":"admin-guide/deployment/helm.html#installing-prerequisites","text":"Install Kubernetes server. Install Kubernetes client, i.e. kubetctl. Install Helm","title":"Installing prerequisites"},{"location":"admin-guide/deployment/helm.html#installing-the-chart","text":"Add the stable repository 1 helm repo add stable https://charts.helm.sh/stable Install Chart dependencies: 1 helm dep update waldur Setup database: 3.1 Setup single PostgreSQL DB: instructions , or 3.2 Setup PostgreSQL HA DB: instructions NB Only one of these two options should be used. Otherwise, DB will be unavailable. 4. Install minio (for media): instructions 5. Install RabbitMQ for task queue: instructions 5. Install Helm package: 1 2 # in 'waldur-helm-poc/' helm install waldur waldur NB After this command, Waldur release will run in default namespace. Please, pay attention in which namespace which release is running. For instance, you can install Waldur release in test namespace in the following way: Create test namespace: 1 kubectl create namespace test Install release: 1 helm install waldur waldur --namespace test","title":"Installing the Chart"},{"location":"admin-guide/deployment/helm.html#adding-admin-user","text":"Open waldur-mastermind-worker shell and execute the following command: Get waldur-mastermind-worker pod name 1 2 3 # Example: kubectl get pods -A | grep waldur-mastermind-worker # --> # default waldur-mastermind-worker-6d98cd98bd-wps8n 1/1 Running 0 9m9s Connect to pod via shell 1 2 # Example: kubectl exec -it waldur-mastermind-worker-6d98cd98bd-wps8n -- /bin/bash Execute command to add admin user 1 waldur createstaffuser -u user -p password -e admin@example.com","title":"Adding admin user"},{"location":"admin-guide/deployment/helm.html#waldur-helm-chart-release-upgrading","text":"Delete initdb job (if exists): 1 kubectl delete job waldur-mastermind-initdb-job || true Upgrade Waldur dependencies and release: 1 2 helm dep update waldur/ helm upgrade waldur waldur/ Restart deployments to apply configmaps changes: 1 2 3 4 kubectl rollout restart deployment waldur-mastermind-beat kubectl rollout restart deployment waldur-mastermind-api kubectl rollout restart deployment waldur-mastermind-worker kubectl rollout restart deployment waldur-homeport","title":"Waldur Helm chart release upgrading"},{"location":"admin-guide/identities/LDAP.html","text":"LDAP Waldur allows you to authenticate using identities from a LDAP server. Prerequisites Below it is assumed that LDAP server is provided by FreeIPA. Although LDAP authentication would work with any other LDAP server as well, you may need to customize configuration for Waldur MasterMind. Please ensure that Waldur Mastermind API server has access to the LDAP server. By default LDAP server listens on TCP and UDP port 389, or on port 636 for LDAPS (LDAP over SSL). If this port is filtered out by firewall, you wouldn't be able to authenticate via LDAP. You should know LDAP server URI, for example, FreeIPA demo server has ldap://ipa.demo1.freeipa.org . You should know username and password of LDAP admin user. For example, FreeIPA demo server uses username=admin and password=Secret123. Add LDAP configuration to Waldur Mastermind configuration Example configuration is below, please adjust to your specific deployment. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import ldap from django_auth_ldap.config import LDAPSearch , GroupOfNamesType # LDAP authentication. # See also: https://django-auth-ldap.readthedocs.io/en/latest/authentication.html AUTHENTICATION_BACKENDS += ( 'django_auth_ldap.backend.LDAPBackend' , ) AUTH_LDAP_SERVER_URI = 'ldap://ipa.demo1.freeipa.org' # Following variables are not used by django-auth-ldap, # they are used as templates for other variables AUTH_LDAP_BASE = 'cn=accounts,dc=demo1,dc=freeipa,dc=org' AUTH_LDAP_USER_BASE = 'cn=users,' + AUTH_LDAP_BASE # Format authenticating user's distinguished name using template AUTH_LDAP_USER_DN_TEMPLATE = 'uid= %(user)s ,' + AUTH_LDAP_USER_BASE # Credentials for admin user AUTH_LDAP_BIND_DN = 'uid=admin,' + AUTH_LDAP_USER_BASE AUTH_LDAP_BIND_PASSWORD = 'Secret123' # Populate the Django user from the LDAP directory. AUTH_LDAP_USER_ATTR_MAP = { 'full_name' : 'displayName' , 'email' : 'mail' } # Set up the basic group parameters. AUTH_LDAP_GROUP_BASE = \"cn=groups,\" + AUTH_LDAP_BASE AUTH_LDAP_GROUP_FILTER = \"(objectClass=groupOfNames)\" AUTH_LDAP_GROUP_SEARCH = LDAPSearch ( AUTH_LDAP_GROUP_BASE , ldap . SCOPE_SUBTREE , AUTH_LDAP_GROUP_FILTER ) AUTH_LDAP_GROUP_TYPE = GroupOfNamesType ( name_attr = \"cn\" ) AUTH_LDAP_USER_FLAGS_BY_GROUP = { 'is_staff' : 'cn=admins,' + AUTH_LDAP_GROUP_BASE , 'is_support' : 'cn=support,' + AUTH_LDAP_GROUP_BASE , } Configuration above is based on LDAP server exposed by FreeIPA. To make it work, there are some things that need to be verified in FreeIPA: Ensure that admins and support groups exist in LDAP server. You may do it using FreeIPA admin UI. If user is assigned to admins group in LDAP, he becomes staff in Waldur. If user is assigned to support group in LDAP, he becomes support user in Waldur. For example, consider the manager user which belong to both groups: Field mapping displayName attribute in LDAP is mapped to full_name attribute in Waldur. mail field in LDAP is mapped to email attribute in Waldur. Consider for example, the following user attributes in LDAP: Here's how it is mapped in Waldur: And here's how it is displayed when user initially logs into Waldur via HomePort:","title":"LDAP"},{"location":"admin-guide/identities/LDAP.html#ldap","text":"Waldur allows you to authenticate using identities from a LDAP server.","title":"LDAP"},{"location":"admin-guide/identities/LDAP.html#prerequisites","text":"Below it is assumed that LDAP server is provided by FreeIPA. Although LDAP authentication would work with any other LDAP server as well, you may need to customize configuration for Waldur MasterMind. Please ensure that Waldur Mastermind API server has access to the LDAP server. By default LDAP server listens on TCP and UDP port 389, or on port 636 for LDAPS (LDAP over SSL). If this port is filtered out by firewall, you wouldn't be able to authenticate via LDAP. You should know LDAP server URI, for example, FreeIPA demo server has ldap://ipa.demo1.freeipa.org . You should know username and password of LDAP admin user. For example, FreeIPA demo server uses username=admin and password=Secret123.","title":"Prerequisites"},{"location":"admin-guide/identities/LDAP.html#add-ldap-configuration-to-waldur-mastermind-configuration","text":"Example configuration is below, please adjust to your specific deployment. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import ldap from django_auth_ldap.config import LDAPSearch , GroupOfNamesType # LDAP authentication. # See also: https://django-auth-ldap.readthedocs.io/en/latest/authentication.html AUTHENTICATION_BACKENDS += ( 'django_auth_ldap.backend.LDAPBackend' , ) AUTH_LDAP_SERVER_URI = 'ldap://ipa.demo1.freeipa.org' # Following variables are not used by django-auth-ldap, # they are used as templates for other variables AUTH_LDAP_BASE = 'cn=accounts,dc=demo1,dc=freeipa,dc=org' AUTH_LDAP_USER_BASE = 'cn=users,' + AUTH_LDAP_BASE # Format authenticating user's distinguished name using template AUTH_LDAP_USER_DN_TEMPLATE = 'uid= %(user)s ,' + AUTH_LDAP_USER_BASE # Credentials for admin user AUTH_LDAP_BIND_DN = 'uid=admin,' + AUTH_LDAP_USER_BASE AUTH_LDAP_BIND_PASSWORD = 'Secret123' # Populate the Django user from the LDAP directory. AUTH_LDAP_USER_ATTR_MAP = { 'full_name' : 'displayName' , 'email' : 'mail' } # Set up the basic group parameters. AUTH_LDAP_GROUP_BASE = \"cn=groups,\" + AUTH_LDAP_BASE AUTH_LDAP_GROUP_FILTER = \"(objectClass=groupOfNames)\" AUTH_LDAP_GROUP_SEARCH = LDAPSearch ( AUTH_LDAP_GROUP_BASE , ldap . SCOPE_SUBTREE , AUTH_LDAP_GROUP_FILTER ) AUTH_LDAP_GROUP_TYPE = GroupOfNamesType ( name_attr = \"cn\" ) AUTH_LDAP_USER_FLAGS_BY_GROUP = { 'is_staff' : 'cn=admins,' + AUTH_LDAP_GROUP_BASE , 'is_support' : 'cn=support,' + AUTH_LDAP_GROUP_BASE , } Configuration above is based on LDAP server exposed by FreeIPA. To make it work, there are some things that need to be verified in FreeIPA: Ensure that admins and support groups exist in LDAP server. You may do it using FreeIPA admin UI. If user is assigned to admins group in LDAP, he becomes staff in Waldur. If user is assigned to support group in LDAP, he becomes support user in Waldur. For example, consider the manager user which belong to both groups:","title":"Add LDAP configuration to Waldur Mastermind configuration"},{"location":"admin-guide/identities/LDAP.html#field-mapping","text":"displayName attribute in LDAP is mapped to full_name attribute in Waldur. mail field in LDAP is mapped to email attribute in Waldur. Consider for example, the following user attributes in LDAP: Here's how it is mapped in Waldur: And here's how it is displayed when user initially logs into Waldur via HomePort:","title":"Field mapping"},{"location":"admin-guide/identities/TARA.html","text":"TARA Waldur supports integration with TARA authentication service. To enable it, please register a new client for Waldur deployment and set configuration settings for TARA. Check configuration guide for available settings.","title":"TARA"},{"location":"admin-guide/identities/TARA.html#tara","text":"Waldur supports integration with TARA authentication service. To enable it, please register a new client for Waldur deployment and set configuration settings for TARA. Check configuration guide for available settings.","title":"TARA"},{"location":"admin-guide/identities/eduGAIN.html","text":"eduGAIN Overview eduGAIN is a global federation of identity and service providers, based technically on SAML2. In order to allow eduGAIN users to access Waldur, there are two steps: Waldur deployment must be registered as a service provider in eduGAIN federation. Waldur must get a list of identities that are trusted for authentication. Tip SAML is a complicated and fragile technology. GEANT provides an alternative to direct integration of SAML - eduTEAMS , which exposes an OpenID Connect protocol for service providers. Waldur relies on djangosaml2 for the heavylifting of SAML processing, so for fine tuning configuration, contact corresponding project documentation. Registering Waldur as Service Provider Add SAML configuration to Waldur Mastermind configuration Example configuration is below, please adjust to your specific deployment. Once applied, service metadata will be visible at Waldur deployment URL: https://waldur.example.com/api-auth/saml2/metadata/ . That data needs to be propagated to the federation operator for inclusion into the federation. Tip Managed ansible simplifies configuration of the eduGAIN integration and should be a preferred method for all supported deployments. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 import datetime import saml2 from saml2.entity_category.edugain import COC WALDUR_AUTH_SAML2 = { # used for assigning the registration method to the user 'name' : 'saml2' , # full path to the xmlsec1 binary program 'xmlsec_binary' : '/usr/bin/xmlsec1' , # required for assertion consumer, single logout services and entity ID 'base_url' : '' , # directory with attribute mapping 'attribute_map_dir' : '' , # set to True to output debugging information 'debug' : False , # IdPs metadata XML files stored locally 'idp_metadata_local' : [], # IdPs metadata XML files stored remotely 'idp_metadata_remote' : [], # logging # empty to disable logging SAML2-related stuff to file 'log_file' : '' , 'log_level' : 'INFO' , # Indicates if the entity will sign the logout requests 'logout_requests_signed' : 'true' , # Indicates if the authentication requests sent should be signed by default 'authn_requests_signed' : 'true' , # Identifies the Signature algorithm URL according to the XML Signature specification # SHA1 is used by default 'signature_algorithm' : None , # Identifies the Message Digest algorithm URL according to the XML Signature specification # SHA1 is used by default 'digest_algorithm' : None , # Identified NameID format to use. None means default, empty string (\"\") disables addition of entity 'nameid_format' : None , # PEM formatted certificate chain file 'cert_file' : '' , # PEM formatted certificate key file 'key_file' : '' , # SAML attributes that are required to identify a user 'required_attributes' : [], # SAML attributes that may be useful to have but not required 'optional_attributes' : [], # mapping between SAML attributes and User fields 'saml_attribute_mapping' : {}, # organization responsible for the service # you can set multilanguage information here 'organization' : {}, # links to the entity categories 'categories' : [ COC ], # attributes required by CoC # https://wiki.refeds.org/display/CODE/SAML+2+Profile+for+the+Data+Protection+Code+of+Conduct 'privacy_statement_url' : 'http://example.com/privacy-policy/' , 'display_name' : 'Service provider display name' , 'description' : 'Service provider description' , # mdpi attributes 'registration_policy' : 'http://example.com/registration-policy/' , 'registration_authority' : 'http://example.com/registration-authority/' , 'registration_instant' : datetime . datetime ( 2017 , 1 , 1 ) . isoformat (), 'ENABLE_SINGLE_LOGOUT' : False , 'ALLOW_TO_SELECT_IDENTITY_PROVIDER' : True , 'IDENTITY_PROVIDER_URL' : None , 'IDENTITY_PROVIDER_LABEL' : None , 'DEFAULT_BINDING' : saml2 . BINDING_HTTP_POST , 'DISCOVERY_SERVICE_URL' : None , 'DISCOVERY_SERVICE_LABEL' : None , } Example of generated metadata 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ns0:EntityDescriptor xmlns:ns0= \"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ns1= \"urn:oasis:names:tc:SAML:metadata:attribute\" xmlns:ns2= \"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:ns4= \"urn:oasis:names:tc:SAML:metadata:algsupport\" xmlns:ns5= \"urn:oasis:names:tc:SAML:metadata:rpi\" xmlns:ns6= \"urn:oasis:names:tc:SAML:metadata:ui\" xmlns:ns7= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" entityID= \"https://api.etais.ee/api-auth/saml2/metadata/\" > <ns0:Extensions> <ns1:EntityAttributes> <ns2:Attribute Name= \"http://macedir.org/entity-category\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" > <ns2:AttributeValue xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xsi:type= \"xs:string\" > http://www.geant.net/uri/dataprotection-code-of-conduct/v1 </ns2:AttributeValue> </ns2:Attribute> </ns1:EntityAttributes> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#sha1\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#sha224\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmlenc#sha256\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#sha384\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmlenc#sha512\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2009/xmldsig11#dsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha224\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\" /> <ns5:RegistrationInfo registrationAuthority= \"http://taat.edu.ee\" registrationInstant= \"2017-01-01T00:00:00\" > <ns5:RegistrationPolicy xml:lang= \"en\" > http://taat.edu.ee/main/wp-content/uploads/Federation_Policy_1.3.pdf </ns5:RegistrationPolicy> </ns5:RegistrationInfo> </ns0:Extensions> <ns0:SPSSODescriptor protocolSupportEnumeration= \"urn:oasis:names:tc:SAML:2.0:protocol\" AuthnRequestsSigned= \"true\" WantAssertionsSigned= \"true\" > <ns0:Extensions> <ns6:UIInfo> <ns6:DisplayName xml:lang= \"en\" > ETAIS Self-Service </ns6:DisplayName> <ns6:Description xml:lang= \"en\" > Self-service for users of Estonian Scientific Computing Infrastructure (ETAIS) </ns6:Description> <ns6:Logo> https://minu.etais.ee/login-logo.png </ns6:Logo> <ns6:PrivacyStatementURL xml:lang= \"en\" > https://minu.etais.ee/views/policy/privacy-full.html </ns6:PrivacyStatementURL> </ns6:UIInfo> </ns0:Extensions> <ns0:KeyDescriptor use= \"signing\" > <ns7:KeyInfo> <ns7:X509Data> <ns7:X509Certificate> MIIDVzCCAj+gAwIBAgIJAN80zoFR2/UbMA0GCSqGSIb3DQEBCwUAMEIxCzAJBgNV BAYTAlhYMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQg Q29tcGFueSBMdGQwHhcNMTcwNDIxMDczMzA1WhcNMjcwNDIxMDczMzA1WjBCMQsw CQYDVQQGEwJYWDEVMBMGA1UEBwwMRGVmYXVsdCBDaXR5MRwwGgYDVQQKDBNEZWZh dWx0IENvbXBhbnkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA o87tb/hEU/igqFPtCFKMvC6LozTbH9y3I4lUVH38FDavDzrHAg1sVr5FEqguApeT xr/cmzsFMIB+XkAf9oI8xi2lUdorgeZFPFnUH0um4yXIJwBjrmgofUcybt84ee44 tM7AZKCAhinFDQUbjYV1LQP44QvFdGiklHGoo2NaVEqJwH6ce/8ioG5aFf2ISS6p fh3qOGVuQgansHFn+v+CvX+JU6FHB7mP+h3Xv+AoVjPz7b7E58rxn9qspy/N4LbB iDk7iBidsXEWYwYsSVP2cTrgKFktn5tB4YYZe0pSZNoCeVq05RK7kBy8yYCWTVZN Emkz5avL9Z2SDaGLY/9CTwIDAQABo1AwTjAdBgNVHQ4EFgQUrdY8o4OeseOy7ReD ZEZCKUZTk2gwHwYDVR0jBBgwFoAUrdY8o4OeseOy7ReDZEZCKUZTk2gwDAYDVR0T BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAoaygm+5U4j3/djWGQulXS2gdrPJV AS8zBuzQPVkhH76WcD8wxzuoceM80jPWLcP6Eq5Tma7rrqOE+QHrY8bm7LIYUEn2 fK/whozFyZ+TswEaDRjN6wL/FDuhu472Lnsg3rvE6s0eW1nlOHuqmqBQPb/kIMOj B3KOI6pqEfb+FqiZ2J/u/4KiOWaA8X9JQUo+HzWNEAPnNUoTl/yGr0Ad6z9YFbsu VnvJVTtGcu8pB5cjm7UtfN73ywEm/a/QXplus0U/Kv5XsSqaGa/Gw6pyX8LOc2yq I0XyOzj7DUcvMVZr5Vf/FVO2Od0Pb03+Wv4JRB5vXM1MsU+xAVgCm0pfew== </ns7:X509Certificate> </ns7:X509Data> </ns7:KeyInfo> </ns0:KeyDescriptor> <ns0:KeyDescriptor use= \"encryption\" > <ns7:KeyInfo> <ns7:X509Data> <ns7:X509Certificate> MIIDVzCCAj+gAwIBAgIJAN80zoFR2/UbMA0GCSqGSIb3DQEBCwUAMEIxCzAJBgNV BAYTAlhYMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQg Q29tcGFueSBMdGQwHhcNMTcwNDIxMDczMzA1WhcNMjcwNDIxMDczMzA1WjBCMQsw CQYDVQQGEwJYWDEVMBMGA1UEBwwMRGVmYXVsdCBDaXR5MRwwGgYDVQQKDBNEZWZh dWx0IENvbXBhbnkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA o87tb/hEU/igqFPtCFKMvC6LozTbH9y3I4lUVH38FDavDzrHAg1sVr5FEqguApeT xr/cmzsFMIB+XkAf9oI8xi2lUdorgeZFPFnUH0um4yXIJwBjrmgofUcybt84ee44 tM7AZKCAhinFDQUbjYV1LQP44QvFdGiklHGoo2NaVEqJwH6ce/8ioG5aFf2ISS6p fh3qOGVuQgansHFn+v+CvX+JU6FHB7mP+h3Xv+AoVjPz7b7E58rxn9qspy/N4LbB iDk7iBidsXEWYwYsSVP2cTrgKFktn5tB4YYZe0pSZNoCeVq05RK7kBy8yYCWTVZN Emkz5avL9Z2SDaGLY/9CTwIDAQABo1AwTjAdBgNVHQ4EFgQUrdY8o4OeseOy7ReD ZEZCKUZTk2gwHwYDVR0jBBgwFoAUrdY8o4OeseOy7ReDZEZCKUZTk2gwDAYDVR0T BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAoaygm+5U4j3/djWGQulXS2gdrPJV AS8zBuzQPVkhH76WcD8wxzuoceM80jPWLcP6Eq5Tma7rrqOE+QHrY8bm7LIYUEn2 fK/whozFyZ+TswEaDRjN6wL/FDuhu472Lnsg3rvE6s0eW1nlOHuqmqBQPb/kIMOj B3KOI6pqEfb+FqiZ2J/u/4KiOWaA8X9JQUo+HzWNEAPnNUoTl/yGr0Ad6z9YFbsu VnvJVTtGcu8pB5cjm7UtfN73ywEm/a/QXplus0U/Kv5XsSqaGa/Gw6pyX8LOc2yq I0XyOzj7DUcvMVZr5Vf/FVO2Od0Pb03+Wv4JRB5vXM1MsU+xAVgCm0pfew== </ns7:X509Certificate> </ns7:X509Data> </ns7:KeyInfo> </ns0:KeyDescriptor> <ns0:SingleLogoutService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location= \"https://api.etais.ee/api-auth/saml2/logout/complete/\" /> <ns0:SingleLogoutService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location= \"https://api.etais.ee/api-auth/saml2/logout/complete/\" /> <ns0:AssertionConsumerService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location= \"https://api.etais.ee/api-auth/saml2/login/complete/\" index= \"1\" /> <ns0:AttributeConsumingService index= \"1\" > <ns0:ServiceName xml:lang= \"en\" > ETAIS Self-Service </ns0:ServiceName> <ns0:RequestedAttribute Name= \"urn:mace:dir:attribute-def:cn\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"cn\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"urn:oid:0.9.2342.19200300.100.1.3\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"mail\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"schacPersonalUniqueID\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"eduPersonPrincipalName\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"schacHomeOrganization\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired= \"false\" /> <ns0:RequestedAttribute Name= \"urn:oid:2.16.840.1.113730.3.1.39\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"preferredLanguage\" isRequired= \"false\" /> <ns0:RequestedAttribute Name= \"urn:oid:1.3.6.1.4.1.5923.1.1.1.9\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"eduPersonScopedAffiliation\" isRequired= \"false\" /> </ns0:AttributeConsumingService> </ns0:SPSSODescriptor> <ns0:Organization> <ns0:OrganizationName xml:lang= \"et\" > ETAIS </ns0:OrganizationName> <ns0:OrganizationName xml:lang= \"en\" > ETAIS </ns0:OrganizationName> <ns0:OrganizationDisplayName xml:lang= \"et\" > ETAIS </ns0:OrganizationDisplayName> <ns0:OrganizationDisplayName xml:lang= \"en\" > ETAIS </ns0:OrganizationDisplayName> <ns0:OrganizationURL xml:lang= \"et\" > http://etais.ee/ </ns0:OrganizationURL> <ns0:OrganizationURL xml:lang= \"en\" > http://etais.ee/ </ns0:OrganizationURL> </ns0:Organization> <ns0:ContactPerson contactType= \"technical\" > <ns0:GivenName> Administrator </ns0:GivenName> <ns0:EmailAddress> etais@etais.ee </ns0:EmailAddress> </ns0:ContactPerson> </ns0:EntityDescriptor> Adding trusted identity providers In order to configure Waldur to use SAML2 authentication you should specify identity provider metadata. If metadata XML is stored locally, it is cached in the local SQL database. Usually metadata XML file is big, so it is necessary to use local cache in this case. But you should ensure that metadata XML file is refreshed via cron on a regular basis. A management command waldur sync_saml2_providers performs refreshing of the data. If metadata XML is accessed remotely, it is not cached in SQL database. Therefore you should ensure that metadata XML is small enough. In this case you should download metadata signing certificate locally and specify its path in Waldur configuration. The certificate is used to retrieve the metadata securely. Please note that security certificates are updated regularly, therefore you should update configuration whenever certificate is updated. By convention, both metadata signing certificate and metadata itself are downloaded to /etc/waldur/saml2 in Waldur Mastermind instances. References TAAT configuration TaaT certificates can be downloaded from: http://taat.edu.ee/main/dokumendid/sertifikaadid/ . Metadata URL for test hub is https://reos.taat.edu.ee/saml2/idp/metadata.php and for production hub is https://sarvik.taat.edu.ee/saml2/idp/metadata.php . Note, the certificate must correspond to the hub you want connect to. Using Janus Janus is a self-service for managing Service Provider records. Create a new connection: New connection ID must be equal to the base_url in saml.conf.py + /apu-auth/saml2/metadata/ Choose SAML 2.0 SP for connection type. Click Create button In connection tab select or create ARP. Fields that ARP include must be in the saml_attribute_mapping. Navigate to the Import metadata tab and paste same URL as in the first step. Click on the Get metadata. Navigate to the Validate tab and check whether all the tests pass. You can fix metadata in Metadata tab. HAKA configuration Production hub metadata is described at https://wiki.eduuni.fi/display/CSCHAKA/Haka+metadata . Test hub metadata is described at https://wiki.eduuni.fi/display/CSCHAKA/Verifying+Haka+compatibility . FEDI configuration Production hub metadata is described at https://fedi.litnet.lt/en/metadata . Discovery is supported: https://discovery.litnet.lt/simplesaml/module.php/discopower/disco.php .","title":"eduGAIN"},{"location":"admin-guide/identities/eduGAIN.html#edugain","text":"","title":"eduGAIN"},{"location":"admin-guide/identities/eduGAIN.html#overview","text":"eduGAIN is a global federation of identity and service providers, based technically on SAML2. In order to allow eduGAIN users to access Waldur, there are two steps: Waldur deployment must be registered as a service provider in eduGAIN federation. Waldur must get a list of identities that are trusted for authentication. Tip SAML is a complicated and fragile technology. GEANT provides an alternative to direct integration of SAML - eduTEAMS , which exposes an OpenID Connect protocol for service providers. Waldur relies on djangosaml2 for the heavylifting of SAML processing, so for fine tuning configuration, contact corresponding project documentation.","title":"Overview"},{"location":"admin-guide/identities/eduGAIN.html#registering-waldur-as-service-provider","text":"","title":"Registering Waldur as Service Provider"},{"location":"admin-guide/identities/eduGAIN.html#add-saml-configuration-to-waldur-mastermind-configuration","text":"Example configuration is below, please adjust to your specific deployment. Once applied, service metadata will be visible at Waldur deployment URL: https://waldur.example.com/api-auth/saml2/metadata/ . That data needs to be propagated to the federation operator for inclusion into the federation. Tip Managed ansible simplifies configuration of the eduGAIN integration and should be a preferred method for all supported deployments. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 import datetime import saml2 from saml2.entity_category.edugain import COC WALDUR_AUTH_SAML2 = { # used for assigning the registration method to the user 'name' : 'saml2' , # full path to the xmlsec1 binary program 'xmlsec_binary' : '/usr/bin/xmlsec1' , # required for assertion consumer, single logout services and entity ID 'base_url' : '' , # directory with attribute mapping 'attribute_map_dir' : '' , # set to True to output debugging information 'debug' : False , # IdPs metadata XML files stored locally 'idp_metadata_local' : [], # IdPs metadata XML files stored remotely 'idp_metadata_remote' : [], # logging # empty to disable logging SAML2-related stuff to file 'log_file' : '' , 'log_level' : 'INFO' , # Indicates if the entity will sign the logout requests 'logout_requests_signed' : 'true' , # Indicates if the authentication requests sent should be signed by default 'authn_requests_signed' : 'true' , # Identifies the Signature algorithm URL according to the XML Signature specification # SHA1 is used by default 'signature_algorithm' : None , # Identifies the Message Digest algorithm URL according to the XML Signature specification # SHA1 is used by default 'digest_algorithm' : None , # Identified NameID format to use. None means default, empty string (\"\") disables addition of entity 'nameid_format' : None , # PEM formatted certificate chain file 'cert_file' : '' , # PEM formatted certificate key file 'key_file' : '' , # SAML attributes that are required to identify a user 'required_attributes' : [], # SAML attributes that may be useful to have but not required 'optional_attributes' : [], # mapping between SAML attributes and User fields 'saml_attribute_mapping' : {}, # organization responsible for the service # you can set multilanguage information here 'organization' : {}, # links to the entity categories 'categories' : [ COC ], # attributes required by CoC # https://wiki.refeds.org/display/CODE/SAML+2+Profile+for+the+Data+Protection+Code+of+Conduct 'privacy_statement_url' : 'http://example.com/privacy-policy/' , 'display_name' : 'Service provider display name' , 'description' : 'Service provider description' , # mdpi attributes 'registration_policy' : 'http://example.com/registration-policy/' , 'registration_authority' : 'http://example.com/registration-authority/' , 'registration_instant' : datetime . datetime ( 2017 , 1 , 1 ) . isoformat (), 'ENABLE_SINGLE_LOGOUT' : False , 'ALLOW_TO_SELECT_IDENTITY_PROVIDER' : True , 'IDENTITY_PROVIDER_URL' : None , 'IDENTITY_PROVIDER_LABEL' : None , 'DEFAULT_BINDING' : saml2 . BINDING_HTTP_POST , 'DISCOVERY_SERVICE_URL' : None , 'DISCOVERY_SERVICE_LABEL' : None , }","title":"Add SAML configuration to Waldur Mastermind configuration"},{"location":"admin-guide/identities/eduGAIN.html#example-of-generated-metadata","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ns0:EntityDescriptor xmlns:ns0= \"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ns1= \"urn:oasis:names:tc:SAML:metadata:attribute\" xmlns:ns2= \"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:ns4= \"urn:oasis:names:tc:SAML:metadata:algsupport\" xmlns:ns5= \"urn:oasis:names:tc:SAML:metadata:rpi\" xmlns:ns6= \"urn:oasis:names:tc:SAML:metadata:ui\" xmlns:ns7= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" entityID= \"https://api.etais.ee/api-auth/saml2/metadata/\" > <ns0:Extensions> <ns1:EntityAttributes> <ns2:Attribute Name= \"http://macedir.org/entity-category\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" > <ns2:AttributeValue xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xsi:type= \"xs:string\" > http://www.geant.net/uri/dataprotection-code-of-conduct/v1 </ns2:AttributeValue> </ns2:Attribute> </ns1:EntityAttributes> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#sha1\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#sha224\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmlenc#sha256\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#sha384\" /> <ns4:DigestMethod Algorithm= \"http://www.w3.org/2001/04/xmlenc#sha512\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#dsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2009/xmldsig11#dsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha224\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha384\" /> <ns4:SigningMethod Algorithm= \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha512\" /> <ns5:RegistrationInfo registrationAuthority= \"http://taat.edu.ee\" registrationInstant= \"2017-01-01T00:00:00\" > <ns5:RegistrationPolicy xml:lang= \"en\" > http://taat.edu.ee/main/wp-content/uploads/Federation_Policy_1.3.pdf </ns5:RegistrationPolicy> </ns5:RegistrationInfo> </ns0:Extensions> <ns0:SPSSODescriptor protocolSupportEnumeration= \"urn:oasis:names:tc:SAML:2.0:protocol\" AuthnRequestsSigned= \"true\" WantAssertionsSigned= \"true\" > <ns0:Extensions> <ns6:UIInfo> <ns6:DisplayName xml:lang= \"en\" > ETAIS Self-Service </ns6:DisplayName> <ns6:Description xml:lang= \"en\" > Self-service for users of Estonian Scientific Computing Infrastructure (ETAIS) </ns6:Description> <ns6:Logo> https://minu.etais.ee/login-logo.png </ns6:Logo> <ns6:PrivacyStatementURL xml:lang= \"en\" > https://minu.etais.ee/views/policy/privacy-full.html </ns6:PrivacyStatementURL> </ns6:UIInfo> </ns0:Extensions> <ns0:KeyDescriptor use= \"signing\" > <ns7:KeyInfo> <ns7:X509Data> <ns7:X509Certificate> MIIDVzCCAj+gAwIBAgIJAN80zoFR2/UbMA0GCSqGSIb3DQEBCwUAMEIxCzAJBgNV BAYTAlhYMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQg Q29tcGFueSBMdGQwHhcNMTcwNDIxMDczMzA1WhcNMjcwNDIxMDczMzA1WjBCMQsw CQYDVQQGEwJYWDEVMBMGA1UEBwwMRGVmYXVsdCBDaXR5MRwwGgYDVQQKDBNEZWZh dWx0IENvbXBhbnkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA o87tb/hEU/igqFPtCFKMvC6LozTbH9y3I4lUVH38FDavDzrHAg1sVr5FEqguApeT xr/cmzsFMIB+XkAf9oI8xi2lUdorgeZFPFnUH0um4yXIJwBjrmgofUcybt84ee44 tM7AZKCAhinFDQUbjYV1LQP44QvFdGiklHGoo2NaVEqJwH6ce/8ioG5aFf2ISS6p fh3qOGVuQgansHFn+v+CvX+JU6FHB7mP+h3Xv+AoVjPz7b7E58rxn9qspy/N4LbB iDk7iBidsXEWYwYsSVP2cTrgKFktn5tB4YYZe0pSZNoCeVq05RK7kBy8yYCWTVZN Emkz5avL9Z2SDaGLY/9CTwIDAQABo1AwTjAdBgNVHQ4EFgQUrdY8o4OeseOy7ReD ZEZCKUZTk2gwHwYDVR0jBBgwFoAUrdY8o4OeseOy7ReDZEZCKUZTk2gwDAYDVR0T BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAoaygm+5U4j3/djWGQulXS2gdrPJV AS8zBuzQPVkhH76WcD8wxzuoceM80jPWLcP6Eq5Tma7rrqOE+QHrY8bm7LIYUEn2 fK/whozFyZ+TswEaDRjN6wL/FDuhu472Lnsg3rvE6s0eW1nlOHuqmqBQPb/kIMOj B3KOI6pqEfb+FqiZ2J/u/4KiOWaA8X9JQUo+HzWNEAPnNUoTl/yGr0Ad6z9YFbsu VnvJVTtGcu8pB5cjm7UtfN73ywEm/a/QXplus0U/Kv5XsSqaGa/Gw6pyX8LOc2yq I0XyOzj7DUcvMVZr5Vf/FVO2Od0Pb03+Wv4JRB5vXM1MsU+xAVgCm0pfew== </ns7:X509Certificate> </ns7:X509Data> </ns7:KeyInfo> </ns0:KeyDescriptor> <ns0:KeyDescriptor use= \"encryption\" > <ns7:KeyInfo> <ns7:X509Data> <ns7:X509Certificate> MIIDVzCCAj+gAwIBAgIJAN80zoFR2/UbMA0GCSqGSIb3DQEBCwUAMEIxCzAJBgNV BAYTAlhYMRUwEwYDVQQHDAxEZWZhdWx0IENpdHkxHDAaBgNVBAoME0RlZmF1bHQg Q29tcGFueSBMdGQwHhcNMTcwNDIxMDczMzA1WhcNMjcwNDIxMDczMzA1WjBCMQsw CQYDVQQGEwJYWDEVMBMGA1UEBwwMRGVmYXVsdCBDaXR5MRwwGgYDVQQKDBNEZWZh dWx0IENvbXBhbnkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA o87tb/hEU/igqFPtCFKMvC6LozTbH9y3I4lUVH38FDavDzrHAg1sVr5FEqguApeT xr/cmzsFMIB+XkAf9oI8xi2lUdorgeZFPFnUH0um4yXIJwBjrmgofUcybt84ee44 tM7AZKCAhinFDQUbjYV1LQP44QvFdGiklHGoo2NaVEqJwH6ce/8ioG5aFf2ISS6p fh3qOGVuQgansHFn+v+CvX+JU6FHB7mP+h3Xv+AoVjPz7b7E58rxn9qspy/N4LbB iDk7iBidsXEWYwYsSVP2cTrgKFktn5tB4YYZe0pSZNoCeVq05RK7kBy8yYCWTVZN Emkz5avL9Z2SDaGLY/9CTwIDAQABo1AwTjAdBgNVHQ4EFgQUrdY8o4OeseOy7ReD ZEZCKUZTk2gwHwYDVR0jBBgwFoAUrdY8o4OeseOy7ReDZEZCKUZTk2gwDAYDVR0T BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAoaygm+5U4j3/djWGQulXS2gdrPJV AS8zBuzQPVkhH76WcD8wxzuoceM80jPWLcP6Eq5Tma7rrqOE+QHrY8bm7LIYUEn2 fK/whozFyZ+TswEaDRjN6wL/FDuhu472Lnsg3rvE6s0eW1nlOHuqmqBQPb/kIMOj B3KOI6pqEfb+FqiZ2J/u/4KiOWaA8X9JQUo+HzWNEAPnNUoTl/yGr0Ad6z9YFbsu VnvJVTtGcu8pB5cjm7UtfN73ywEm/a/QXplus0U/Kv5XsSqaGa/Gw6pyX8LOc2yq I0XyOzj7DUcvMVZr5Vf/FVO2Od0Pb03+Wv4JRB5vXM1MsU+xAVgCm0pfew== </ns7:X509Certificate> </ns7:X509Data> </ns7:KeyInfo> </ns0:KeyDescriptor> <ns0:SingleLogoutService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location= \"https://api.etais.ee/api-auth/saml2/logout/complete/\" /> <ns0:SingleLogoutService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location= \"https://api.etais.ee/api-auth/saml2/logout/complete/\" /> <ns0:AssertionConsumerService Binding= \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location= \"https://api.etais.ee/api-auth/saml2/login/complete/\" index= \"1\" /> <ns0:AttributeConsumingService index= \"1\" > <ns0:ServiceName xml:lang= \"en\" > ETAIS Self-Service </ns0:ServiceName> <ns0:RequestedAttribute Name= \"urn:mace:dir:attribute-def:cn\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"cn\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"urn:oid:0.9.2342.19200300.100.1.3\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"mail\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"schacPersonalUniqueID\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"urn:oid:1.3.6.1.4.1.5923.1.1.1.6\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"eduPersonPrincipalName\" isRequired= \"true\" /> <ns0:RequestedAttribute Name= \"schacHomeOrganization\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" isRequired= \"false\" /> <ns0:RequestedAttribute Name= \"urn:oid:2.16.840.1.113730.3.1.39\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"preferredLanguage\" isRequired= \"false\" /> <ns0:RequestedAttribute Name= \"urn:oid:1.3.6.1.4.1.5923.1.1.1.9\" NameFormat= \"urn:oasis:names:tc:SAML:2.0:attrname-format:uri\" FriendlyName= \"eduPersonScopedAffiliation\" isRequired= \"false\" /> </ns0:AttributeConsumingService> </ns0:SPSSODescriptor> <ns0:Organization> <ns0:OrganizationName xml:lang= \"et\" > ETAIS </ns0:OrganizationName> <ns0:OrganizationName xml:lang= \"en\" > ETAIS </ns0:OrganizationName> <ns0:OrganizationDisplayName xml:lang= \"et\" > ETAIS </ns0:OrganizationDisplayName> <ns0:OrganizationDisplayName xml:lang= \"en\" > ETAIS </ns0:OrganizationDisplayName> <ns0:OrganizationURL xml:lang= \"et\" > http://etais.ee/ </ns0:OrganizationURL> <ns0:OrganizationURL xml:lang= \"en\" > http://etais.ee/ </ns0:OrganizationURL> </ns0:Organization> <ns0:ContactPerson contactType= \"technical\" > <ns0:GivenName> Administrator </ns0:GivenName> <ns0:EmailAddress> etais@etais.ee </ns0:EmailAddress> </ns0:ContactPerson> </ns0:EntityDescriptor>","title":"Example of generated metadata"},{"location":"admin-guide/identities/eduGAIN.html#adding-trusted-identity-providers","text":"In order to configure Waldur to use SAML2 authentication you should specify identity provider metadata. If metadata XML is stored locally, it is cached in the local SQL database. Usually metadata XML file is big, so it is necessary to use local cache in this case. But you should ensure that metadata XML file is refreshed via cron on a regular basis. A management command waldur sync_saml2_providers performs refreshing of the data. If metadata XML is accessed remotely, it is not cached in SQL database. Therefore you should ensure that metadata XML is small enough. In this case you should download metadata signing certificate locally and specify its path in Waldur configuration. The certificate is used to retrieve the metadata securely. Please note that security certificates are updated regularly, therefore you should update configuration whenever certificate is updated. By convention, both metadata signing certificate and metadata itself are downloaded to /etc/waldur/saml2 in Waldur Mastermind instances.","title":"Adding trusted identity providers"},{"location":"admin-guide/identities/eduGAIN.html#references","text":"","title":"References"},{"location":"admin-guide/identities/eduGAIN.html#taat-configuration","text":"TaaT certificates can be downloaded from: http://taat.edu.ee/main/dokumendid/sertifikaadid/ . Metadata URL for test hub is https://reos.taat.edu.ee/saml2/idp/metadata.php and for production hub is https://sarvik.taat.edu.ee/saml2/idp/metadata.php . Note, the certificate must correspond to the hub you want connect to.","title":"TAAT configuration"},{"location":"admin-guide/identities/eduGAIN.html#using-janus","text":"Janus is a self-service for managing Service Provider records. Create a new connection: New connection ID must be equal to the base_url in saml.conf.py + /apu-auth/saml2/metadata/ Choose SAML 2.0 SP for connection type. Click Create button In connection tab select or create ARP. Fields that ARP include must be in the saml_attribute_mapping. Navigate to the Import metadata tab and paste same URL as in the first step. Click on the Get metadata. Navigate to the Validate tab and check whether all the tests pass. You can fix metadata in Metadata tab.","title":"Using Janus"},{"location":"admin-guide/identities/eduGAIN.html#haka-configuration","text":"Production hub metadata is described at https://wiki.eduuni.fi/display/CSCHAKA/Haka+metadata . Test hub metadata is described at https://wiki.eduuni.fi/display/CSCHAKA/Verifying+Haka+compatibility .","title":"HAKA configuration"},{"location":"admin-guide/identities/eduGAIN.html#fedi-configuration","text":"Production hub metadata is described at https://fedi.litnet.lt/en/metadata . Discovery is supported: https://discovery.litnet.lt/simplesaml/module.php/discopower/disco.php .","title":"FEDI configuration"},{"location":"admin-guide/identities/eduTEAMS.html","text":"eduTeams Waldur supports integration with eduTEAMS identity service. To enable it, please register a new client for Waldur deployment and set configuration settings for eduTEAMS. Check configuration guide for available settings.","title":"eduTeams"},{"location":"admin-guide/identities/eduTEAMS.html#eduteams","text":"Waldur supports integration with eduTEAMS identity service. To enable it, please register a new client for Waldur deployment and set configuration settings for eduTEAMS. Check configuration guide for available settings.","title":"eduTeams"},{"location":"admin-guide/identities/freeipa.html","text":"FreeIPA Tip For integrating FreeIPA as source of identities, please see LDAP . This module is about synchronising users from Waldur to FreeIPA For situations when you would like to provide access to services based on the Linux usernames, e.g. for SLURM deployments, you might want to map users from Waldur (e.g. created through eduGAIN) to an external FreeIPA service. To do that, you need to enable module and define settings for accessing FreeIPA REST APIs. See Waldur configuration guide for the list of supported FreeIPA settings. At the moment at most one deployment of FreeIPA per Waldur is supported.","title":"FreeIPA"},{"location":"admin-guide/identities/freeipa.html#freeipa","text":"Tip For integrating FreeIPA as source of identities, please see LDAP . This module is about synchronising users from Waldur to FreeIPA For situations when you would like to provide access to services based on the Linux usernames, e.g. for SLURM deployments, you might want to map users from Waldur (e.g. created through eduGAIN) to an external FreeIPA service. To do that, you need to enable module and define settings for accessing FreeIPA REST APIs. See Waldur configuration guide for the list of supported FreeIPA settings. At the moment at most one deployment of FreeIPA per Waldur is supported.","title":"FreeIPA"},{"location":"admin-guide/identities/keycloak.html","text":"Keycloak Waldur supports integration with Keycloak identity manager. To enable it, please register a new client for Waldur deployment and set configuration settings for Keycloak. Check configuration guide for available settings.","title":"Keycloak"},{"location":"admin-guide/identities/keycloak.html#keycloak","text":"Waldur supports integration with Keycloak identity manager. To enable it, please register a new client for Waldur deployment and set configuration settings for Keycloak. Check configuration guide for available settings.","title":"Keycloak"},{"location":"admin-guide/identities/summary.html","text":"Summary Name Protocol Description eduGAIN SAML Federation of research and educational providers supported by Geant eduTEAMS OIDC Group management service integrated with research and educational providers provided by Geant FreeIPA REST API Support for synchronisation of Waldur identities with open-source Identity Management server Keycloak OIDC Open-source identity management server LDAP LDAP/S Support of identity servers over LDAP protocol TARA OIDC Estonian State Autentication service","title":"Summary"},{"location":"admin-guide/identities/summary.html#summary","text":"Name Protocol Description eduGAIN SAML Federation of research and educational providers supported by Geant eduTEAMS OIDC Group management service integrated with research and educational providers provided by Geant FreeIPA REST API Support for synchronisation of Waldur identities with open-source Identity Management server Keycloak OIDC Open-source identity management server LDAP LDAP/S Support of identity servers over LDAP protocol TARA OIDC Estonian State Autentication service","title":"Summary"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html","text":"WALDUR_AUTH_SOCIAL plugin Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 WALDUR_AUTH_SOCIAL = { 'EDUTEAMS_AUTH_URL' : 'https://proxy.acc.eduteams.org/saml2sp/OIDC/authorization' , 'EDUTEAMS_CLIENT_ID' : '' , 'EDUTEAMS_LABEL' : 'Eduteams' , 'EDUTEAMS_SECRET' : '' , 'EDUTEAMS_TOKEN_URL' : 'https://proxy.acc.eduteams.org/OIDC/token' , 'EDUTEAMS_USERINFO_URL' : 'https://proxy.acc.eduteams.org/OIDC/userinfo' , 'ENABLE_EDUTEAMS_SYNC' : False , 'FACEBOOK_CLIENT_ID' : '' , 'FACEBOOK_SECRET' : '' , 'KEYCLOAK_AUTH_URL' : '' , 'KEYCLOAK_CLIENT_ID' : '' , 'KEYCLOAK_LABEL' : 'Keycloak' , 'KEYCLOAK_SECRET' : '' , 'KEYCLOAK_TOKEN_URL' : '' , 'KEYCLOAK_USERINFO_URL' : '' , 'REMOTE_EDUTEAMS_ACCESS_TOKEN' : '' , 'REMOTE_EDUTEAMS_TOKEN_URL' : 'https://proxy.acc.researcher-access.org/OIDC/token' , 'REMOTE_EDUTEAMS_USERINFO_URL' : 'https://proxy.acc.researcher-access.org/api/userinfo' , 'SMARTIDEE_CLIENT_ID' : '' , 'SMARTIDEE_SECRET' : '' , 'TARA_CLIENT_ID' : '' , 'TARA_LABEL' : 'Riigi Autentimisteenus' , 'TARA_SANDBOX' : True , 'TARA_SECRET' : '' } EDUTEAMS_AUTH_URL Type: str The authorization endpoint performs authentication of the end-user. This is done by redirecting the user agent to this endpoint. EDUTEAMS_CLIENT_ID Type: str ID of application used for OAuth authentication. EDUTEAMS_LABEL Type: str Label is used by HomePort for rendering login button. EDUTEAMS_SECRET Type: str Application secret key. EDUTEAMS_TOKEN_URL Type: str The token endpoint is used to obtain tokens. EDUTEAMS_USERINFO_URL Type: str The userinfo endpoint returns standard claims about the authenticated user, and is protected by a bearer token. ENABLE_EDUTEAMS_SYNC Type: bool Enable EduTeams synchronization with remote Waldur. FACEBOOK_CLIENT_ID Type: str ID of application used for OAuth authentication. FACEBOOK_SECRET Type: str Application secret key. KEYCLOAK_AUTH_URL Type: str The authorization endpoint performs authentication of the end-user. This is done by redirecting the user agent to this endpoint. KEYCLOAK_CLIENT_ID Type: str ID of application used for OAuth authentication. KEYCLOAK_LABEL Type: str Label is used by HomePort for rendering login button. KEYCLOAK_SECRET Type: str Application secret key. KEYCLOAK_TOKEN_URL Type: str The token endpoint is used to obtain tokens. KEYCLOAK_USERINFO_URL Type: str The userinfo endpoint returns standard claims about the authenticated user, and is protected by a bearer token. REMOTE_EDUTEAMS_ACCESS_TOKEN Type: str Token is used to authenticate against user info endpoint. REMOTE_EDUTEAMS_TOKEN_URL Type: str The token endpoint is used to obtain tokens. REMOTE_EDUTEAMS_USERINFO_URL Type: str It allows to get user data based on userid aka CUID. SMARTIDEE_CLIENT_ID Type: str ID of application used for OAuth authentication. SMARTIDEE_SECRET Type: str Application secret key. TARA_CLIENT_ID Type: str ID of application used for OAuth authentication. TARA_LABEL Type: str You may set it to eIDAS, SmartID or MobileID make it more clear to the user which exact identity provider is configured or preferred for service provider. TARA_SANDBOX Type: bool You should set it to False in order to switch to production mode. TARA_SECRET Type: str Application secret key. WALDUR_CORE plugin Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 WALDUR_CORE = { 'ALLOW_SIGNUP_WITHOUT_INVITATION' : True , 'ATTACHMENT_LINK_MAX_AGE' : datetime . timedelta ( seconds = 3600 ), 'AUTHENTICATION_METHODS' : [ 'LOCAL_SIGNIN' ], 'BACKEND_FIELDS_EDITABLE' : True , 'COUNTRIES' : [ 'EE' , 'LV' , 'LT' ], 'CREATE_DEFAULT_PROJECT_ON_ORGANIZATION_CREATION' : False , 'CURRENCY_NAME' : 'EUR' , 'EMAIL_CHANGE_MAX_AGE' : datetime . timedelta ( days = 1 ), 'ENABLE_ACCOUNTING_START_DATE' : False , 'ENABLE_GEOIP' : True , 'EXTENSIONS_AUTOREGISTER' : True , 'HOMEPORT_URL' : 'https://example.com/' , 'HTTP_CHUNK_SIZE' : 50 , 'INITIAL_CUSTOMER_AGREEMENT_NUMBER' : 4000 , 'INVITATIONS_ENABLED' : True , 'INVITATION_CREATE_MISSING_USER' : False , 'INVITATION_DISABLE_MULTIPLE_ROLES' : False , 'INVITATION_LIFETIME' : datetime . timedelta ( days = 7 ), 'INVITATION_MAX_AGE' : None , 'LOGGING_REPORT_DIRECTORY' : '/var/log/waldur' , 'LOGGING_REPORT_INTERVAL' : datetime . timedelta ( days = 7 ), 'NATIVE_NAME_ENABLED' : False , 'NOTIFICATIONS_PROFILE_CHANGES' : { 'ENABLED' : True , 'FIELDS' : ( 'email' , 'phone_number' , 'job_title' )}, 'NOTIFICATION_SUBJECT' : 'Notifications from Waldur' , 'ONLY_STAFF_CAN_INVITE_USERS' : False , 'ONLY_STAFF_MANAGES_SERVICES' : False , 'OWNERS_CAN_MANAGE_OWNERS' : False , 'OWNER_CAN_MANAGE_CUSTOMER' : False , 'PROTECT_USER_DETAILS_FOR_REGISTRATION_METHODS' : [], 'SELLER_COUNTRY_CODE' : None , 'SHOW_ALL_USERS' : False , 'SITE_ADDRESS' : 'Default address' , 'SITE_EMAIL' : 'Default email' , 'SITE_LOGO' : None , 'SITE_NAME' : 'Waldur MasterMind' , 'SITE_PHONE' : 'Default phone' , 'TOKEN_KEY' : 'x-auth-token' , 'TOKEN_LIFETIME' : datetime . timedelta ( seconds = 3600 ), 'USE_ATOMIC_TRANSACTION' : True , 'VALIDATE_INVITATION_EMAIL' : False } ALLOW_SIGNUP_WITHOUT_INVITATION Type: bool Allow to signup without an invitation. ATTACHMENT_LINK_MAX_AGE Type: timedelta Max age of secure token for media download. AUTHENTICATION_METHODS Type: List[str] List of enabled authentication methods. BACKEND_FIELDS_EDITABLE Type: bool Allows to control /admin writable fields. If this flag is disabled it is impossible to edit any field that corresponds to backend value via /admin. Such restriction allows to save information from corruption. COUNTRIES Type: List[str] It is used in organization creation dialog in order to limit country choices to predefined set. CREATE_DEFAULT_PROJECT_ON_ORGANIZATION_CREATION Type: bool Enables generation of the first project on organization creation. CURRENCY_NAME Type: str It is used in marketplace order details and invoices for currency formatting. EMAIL_CHANGE_MAX_AGE Type: timedelta Max age of change email request. ENABLE_ACCOUNTING_START_DATE Type: bool Allows to enable accounting for organizations using value of accounting_start_date field. ENABLE_GEOIP Type: bool Enable detection of coordinates of virtual machines. EXTENSIONS_AUTOREGISTER Type: bool Defines whether extensions should be automatically registered. HOMEPORT_URL Type: str It is used for rendering callback URL in HomePort. HTTP_CHUNK_SIZE Type: int Chunk size for resource fetching from backend API. It is needed in order to avoid too long HTTP request error. INITIAL_CUSTOMER_AGREEMENT_NUMBER Type: int Allows to tweak initial value of agreement number. It is assumed that organization owner should accept terms of services when organization is registered via Waldur HomePort. INVITATIONS_ENABLED Type: bool Allows to disable invitations feature. INVITATION_CREATE_MISSING_USER Type: bool Allow to create FreeIPA user using details specified in invitation if user does not exist yet. INVITATION_DISABLE_MULTIPLE_ROLES Type: bool Do not allow user to grant multiple roles in the same project or organization using invitation. INVITATION_LIFETIME Type: timedelta Defines for how long invitation remains valid. INVITATION_MAX_AGE Type: Optional[timedelta] Max age of invitation token. It is used in approve and reject actions. LOGGING_REPORT_DIRECTORY Type: str Directory where log files are located. LOGGING_REPORT_INTERVAL Type: timedelta Files older that specified interval are filtered out. NATIVE_NAME_ENABLED Type: bool Allows to render native name field in customer and user forms. NOTIFICATIONS_PROFILE_CHANGES Type: dict Allows enabling notifications about profile changes of organization owners. NOTIFICATION_SUBJECT Type: str It is used as a subject of email emitted by event logging hook. ONLY_STAFF_CAN_INVITE_USERS Type: bool Allow to limit invitation management to staff only. ONLY_STAFF_MANAGES_SERVICES Type: bool Allows to restrict provider management only to staff users. OWNERS_CAN_MANAGE_OWNERS Type: bool Enables organization owners to manage other organization owners. OWNER_CAN_MANAGE_CUSTOMER Type: bool Enables organization owners to create an organization. PROTECT_USER_DETAILS_FOR_REGISTRATION_METHODS Type: List[str] List of authentication methods which are not allowed to update user details. SELLER_COUNTRY_CODE Type: Optional[str] Specifies seller legal or effective country of registration or residence as an ISO 3166-1 alpha-2 country code. It is used for computing VAT charge rate. SHOW_ALL_USERS Type: bool Indicates whether user can see all other users in api/users/ endpoint. SITE_ADDRESS Type: str It is used in marketplace order header. SITE_EMAIL Type: str It is used in marketplace order header. SITE_LOGO Type: Optional[str] It is used in marketplace order header. SITE_NAME Type: str It is used in email notifications in order to refer to the current deployment in user-friendly way. SITE_PHONE Type: str It is used in marketplace order header. TOKEN_KEY Type: str Header for token authentication. TOKEN_LIFETIME Type: timedelta Defines for how long user token should remain valid if there was no action from user. USE_ATOMIC_TRANSACTION Type: bool Wrap action views in atomic transaction. VALIDATE_INVITATION_EMAIL Type: bool Ensure that invitation and user emails match. WALDUR_FREEIPA plugin Default value: 1 2 3 4 5 6 7 8 9 WALDUR_FREEIPA = { 'BLACKLISTED_USERNAMES' : [ 'root' ], 'ENABLED' : False , 'GROUPNAME_PREFIX' : 'waldur_' , 'GROUP_SYNCHRONIZATION_ENABLED' : True , 'HOSTNAME' : 'ipa.example.com' , 'PASSWORD' : 'secret' , 'USERNAME' : 'admin' , 'USERNAME_PREFIX' : 'waldur_' , 'VERIFY_SSL' : True } BLACKLISTED_USERNAMES Type: list List of username that users are not allowed to select ENABLED Type: bool Enable integration of identity provisioning in configured FreeIPA GROUPNAME_PREFIX Type: str Prefix to be appended to all group names created in FreeIPA by Waldur GROUP_SYNCHRONIZATION_ENABLED Type: bool Optionally disable creation of user groups in FreeIPA matching Waldur structure HOSTNAME Type: str Hostname of FreeIPA server PASSWORD Type: str Password of FreeIPA user with administrative privileges USERNAME Type: str Username of FreeIPA user with administrative privileges USERNAME_PREFIX Type: str Prefix to be appended to all usernames created in FreeIPA by Waldur VERIFY_SSL Type: bool Validate TLS certificate of FreeIPA web interface / REST API WALDUR_HPC plugin Default value: 1 2 3 4 5 6 7 8 9 10 WALDUR_HPC = { 'ENABLED' : False , 'EXTERNAL_AFFILIATIONS' : [], 'EXTERNAL_CUSTOMER_UUID' : '' , 'EXTERNAL_EMAIL_PATTERNS' : [], 'INTERNAL_AFFILIATIONS' : [], 'INTERNAL_CUSTOMER_UUID' : '' , 'INTERNAL_EMAIL_PATTERNS' : [], 'INTERNAL_LIMITS' : {}, 'OFFERING_UUID' : '' , 'PLAN_UUID' : '' } ENABLED Type: bool Enable HPC-specific hooks in Waldur deployment EXTERNAL_AFFILIATIONS Type: List[str] List of user affiliations (eduPersonScopedAffiliation fields) that define if the user belongs to external organization. EXTERNAL_CUSTOMER_UUID Type: str UUID of a Waldur organization (aka customer) where new external users would be added EXTERNAL_EMAIL_PATTERNS Type: List[str] List of user email patterns (as regex) that define if the user belongs to external organization. INTERNAL_AFFILIATIONS Type: List[str] List of user affiliations (eduPersonScopedAffiliation fields) that define if the user belongs to internal organization. INTERNAL_CUSTOMER_UUID Type: str UUID of a Waldur organization (aka customer) where new internal users would be added INTERNAL_EMAIL_PATTERNS Type: List[str] List of user email patterns (as regex) that define if the user belongs to internal organization. INTERNAL_LIMITS Type: dict Overrided default values for SLURM offering to be created for users belonging to internal organization. OFFERING_UUID Type: str UUID of a Waldur SLURM offering, which will be used for creating allocations for users PLAN_UUID Type: str UUID of a Waldur SLURM offering plan, which will be used for creating allocations for users WALDUR_MARKETPLACE plugin Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 WALDUR_MARKETPLACE = { 'ADMIN_CAN_APPROVE_ORDER' : False , 'ANONYMOUS_USER_CAN_VIEW_OFFERINGS' : True , 'DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE' : True , 'ENABLE_STALE_RESOURCE_NOTIFICATIONS' : False , 'MANAGER_CAN_APPROVE_ORDER' : False , 'NOTIFY_ABOUT_RESOURCE_CHANGE' : True , 'NOTIFY_STAFF_ABOUT_APPROVALS' : False , 'OWNER_CAN_APPROVE_ORDER' : True , 'OWNER_CAN_REGISTER_SERVICE_PROVIDER' : False , 'PLAN_TEMPLATE' : 'Plan: {{ plan.name }}{ % f or component in components %} \\n ' '{{component.name}}; amount: {{component.amount}}; price: ' '{{component.price|floatformat }};{ % e ndfor %}' , 'THUMBNAIL_SIZE' : ( 120 , 120 )} ADMIN_CAN_APPROVE_ORDER Type: bool If true, orders for resource can be approved by admin of the customer project ANONYMOUS_USER_CAN_VIEW_OFFERINGS Type: bool Allow anonymous users to see shared offerings in active, paused and archived states DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE Type: bool Disable only resource update events. ENABLE_STALE_RESOURCE_NOTIFICATIONS Type: bool Enable reminders to owners about resources of shared offerings that have not generated any cost for the last 3 months. MANAGER_CAN_APPROVE_ORDER Type: bool If true, orders for resource can be approved by manager of the customer project NOTIFY_ABOUT_RESOURCE_CHANGE Type: bool If true, notify users about resource changes from Marketplace perspective. Can generate duplicate events if plugins also log NOTIFY_STAFF_ABOUT_APPROVALS Type: bool If true, users with staff role are notified when request for order approval is generated OWNER_CAN_APPROVE_ORDER Type: bool If true, orders for resource can be approved by custom organization owner. OWNER_CAN_REGISTER_SERVICE_PROVIDER Type: bool Allow organization owner to request or mark its organization as service provider PLAN_TEMPLATE Type: str Template for a plan field THUMBNAIL_SIZE Type: tuple Size of the thumbnail to generate when screenshot is uploaded for an offering. WALDUR_PID plugin Default value: 1 2 3 4 5 6 WALDUR_PID = { 'DATACITE' : { 'API_URL' : 'https://example.com' , 'COLLECTION_DOI' : '' , 'PASSWORD' : '' , 'PREFIX' : '' , 'PUBLISHER' : 'Waldur' , 'REPOSITORY_ID' : '' }} DATACITE Type: dict Settings for integration of Waldur with Datacite PID service. Collection DOI is used to aggregate generated DOIs. WALDUR_SLURM plugin Default value: 1 2 3 4 5 6 WALDUR_SLURM = { 'ALLOCATION_PREFIX' : 'waldur_allocation_' , 'CUSTOMER_PREFIX' : 'waldur_customer_' , 'DEFAULT_LIMITS' : { 'CPU' : 16000 , 'GPU' : 400 , 'RAM' : 102400000 }, 'ENABLED' : False , 'PRIVATE_KEY_PATH' : '/etc/waldur/id_rsa' , 'PROJECT_PREFIX' : 'waldur_project_' } ALLOCATION_PREFIX Type: str Prefix for SLURM account name corresponding to Waldur allocation CUSTOMER_PREFIX Type: str Prefix for SLURM account name corresponding to Waldur organization. DEFAULT_LIMITS Type: dict Default limits of account that are set when SLURM account is provisioned. ENABLED Type: bool Enable support for SLURM plugin in a deployment PRIVATE_KEY_PATH Type: str Path to private key file used as SSH identity file for accessing SLURM master. PROJECT_PREFIX Type: str Prefix for SLURM account name corresponding to Waldur project. Other variables DEFAULT_FROM_EMAIL Type: str, default value: webmaster@localhost Default email address to use for automated correspondence from Waldur. IMPORT_EXPORT_USE_TRANSACTIONS Type: bool, default value: True Controls if resource importing should use database transactions. Using transactions makes imports safer as a failure during import won\u2019t import only part of the data set. IPSTACK_ACCESS_KEY Type: Optional[str] Unique authentication key used to gain access to the ipstack API. LANGUAGES Type: List[Tuple[str, str]], default value: (('en', 'English'), ('et', 'Eesti')) The list is a list of two-tuples in the format (language code, language name) \u2013 for example, ('ja', 'Japanese'). This specifies which languages are available for language selection. USE_PROTECTED_URL Type: bool, default value: False Protect media URLs using signed token. VERIFY_WEBHOOK_REQUESTS Type: bool, default value: True When webook is processed, requests verifies SSL certificates for HTTPS requests, just like a web browser.","title":"Configuration guide"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_auth_social-plugin","text":"Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 WALDUR_AUTH_SOCIAL = { 'EDUTEAMS_AUTH_URL' : 'https://proxy.acc.eduteams.org/saml2sp/OIDC/authorization' , 'EDUTEAMS_CLIENT_ID' : '' , 'EDUTEAMS_LABEL' : 'Eduteams' , 'EDUTEAMS_SECRET' : '' , 'EDUTEAMS_TOKEN_URL' : 'https://proxy.acc.eduteams.org/OIDC/token' , 'EDUTEAMS_USERINFO_URL' : 'https://proxy.acc.eduteams.org/OIDC/userinfo' , 'ENABLE_EDUTEAMS_SYNC' : False , 'FACEBOOK_CLIENT_ID' : '' , 'FACEBOOK_SECRET' : '' , 'KEYCLOAK_AUTH_URL' : '' , 'KEYCLOAK_CLIENT_ID' : '' , 'KEYCLOAK_LABEL' : 'Keycloak' , 'KEYCLOAK_SECRET' : '' , 'KEYCLOAK_TOKEN_URL' : '' , 'KEYCLOAK_USERINFO_URL' : '' , 'REMOTE_EDUTEAMS_ACCESS_TOKEN' : '' , 'REMOTE_EDUTEAMS_TOKEN_URL' : 'https://proxy.acc.researcher-access.org/OIDC/token' , 'REMOTE_EDUTEAMS_USERINFO_URL' : 'https://proxy.acc.researcher-access.org/api/userinfo' , 'SMARTIDEE_CLIENT_ID' : '' , 'SMARTIDEE_SECRET' : '' , 'TARA_CLIENT_ID' : '' , 'TARA_LABEL' : 'Riigi Autentimisteenus' , 'TARA_SANDBOX' : True , 'TARA_SECRET' : '' }","title":"WALDUR_AUTH_SOCIAL plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_auth_url","text":"Type: str The authorization endpoint performs authentication of the end-user. This is done by redirecting the user agent to this endpoint.","title":"EDUTEAMS_AUTH_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_client_id","text":"Type: str ID of application used for OAuth authentication.","title":"EDUTEAMS_CLIENT_ID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_label","text":"Type: str Label is used by HomePort for rendering login button.","title":"EDUTEAMS_LABEL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_secret","text":"Type: str Application secret key.","title":"EDUTEAMS_SECRET"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_token_url","text":"Type: str The token endpoint is used to obtain tokens.","title":"EDUTEAMS_TOKEN_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#eduteams_userinfo_url","text":"Type: str The userinfo endpoint returns standard claims about the authenticated user, and is protected by a bearer token.","title":"EDUTEAMS_USERINFO_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enable_eduteams_sync","text":"Type: bool Enable EduTeams synchronization with remote Waldur.","title":"ENABLE_EDUTEAMS_SYNC"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#facebook_client_id","text":"Type: str ID of application used for OAuth authentication.","title":"FACEBOOK_CLIENT_ID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#facebook_secret","text":"Type: str Application secret key.","title":"FACEBOOK_SECRET"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_auth_url","text":"Type: str The authorization endpoint performs authentication of the end-user. This is done by redirecting the user agent to this endpoint.","title":"KEYCLOAK_AUTH_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_client_id","text":"Type: str ID of application used for OAuth authentication.","title":"KEYCLOAK_CLIENT_ID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_label","text":"Type: str Label is used by HomePort for rendering login button.","title":"KEYCLOAK_LABEL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_secret","text":"Type: str Application secret key.","title":"KEYCLOAK_SECRET"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_token_url","text":"Type: str The token endpoint is used to obtain tokens.","title":"KEYCLOAK_TOKEN_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#keycloak_userinfo_url","text":"Type: str The userinfo endpoint returns standard claims about the authenticated user, and is protected by a bearer token.","title":"KEYCLOAK_USERINFO_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#remote_eduteams_access_token","text":"Type: str Token is used to authenticate against user info endpoint.","title":"REMOTE_EDUTEAMS_ACCESS_TOKEN"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#remote_eduteams_token_url","text":"Type: str The token endpoint is used to obtain tokens.","title":"REMOTE_EDUTEAMS_TOKEN_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#remote_eduteams_userinfo_url","text":"Type: str It allows to get user data based on userid aka CUID.","title":"REMOTE_EDUTEAMS_USERINFO_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#smartidee_client_id","text":"Type: str ID of application used for OAuth authentication.","title":"SMARTIDEE_CLIENT_ID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#smartidee_secret","text":"Type: str Application secret key.","title":"SMARTIDEE_SECRET"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#tara_client_id","text":"Type: str ID of application used for OAuth authentication.","title":"TARA_CLIENT_ID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#tara_label","text":"Type: str You may set it to eIDAS, SmartID or MobileID make it more clear to the user which exact identity provider is configured or preferred for service provider.","title":"TARA_LABEL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#tara_sandbox","text":"Type: bool You should set it to False in order to switch to production mode.","title":"TARA_SANDBOX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#tara_secret","text":"Type: str Application secret key.","title":"TARA_SECRET"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_core-plugin","text":"Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 WALDUR_CORE = { 'ALLOW_SIGNUP_WITHOUT_INVITATION' : True , 'ATTACHMENT_LINK_MAX_AGE' : datetime . timedelta ( seconds = 3600 ), 'AUTHENTICATION_METHODS' : [ 'LOCAL_SIGNIN' ], 'BACKEND_FIELDS_EDITABLE' : True , 'COUNTRIES' : [ 'EE' , 'LV' , 'LT' ], 'CREATE_DEFAULT_PROJECT_ON_ORGANIZATION_CREATION' : False , 'CURRENCY_NAME' : 'EUR' , 'EMAIL_CHANGE_MAX_AGE' : datetime . timedelta ( days = 1 ), 'ENABLE_ACCOUNTING_START_DATE' : False , 'ENABLE_GEOIP' : True , 'EXTENSIONS_AUTOREGISTER' : True , 'HOMEPORT_URL' : 'https://example.com/' , 'HTTP_CHUNK_SIZE' : 50 , 'INITIAL_CUSTOMER_AGREEMENT_NUMBER' : 4000 , 'INVITATIONS_ENABLED' : True , 'INVITATION_CREATE_MISSING_USER' : False , 'INVITATION_DISABLE_MULTIPLE_ROLES' : False , 'INVITATION_LIFETIME' : datetime . timedelta ( days = 7 ), 'INVITATION_MAX_AGE' : None , 'LOGGING_REPORT_DIRECTORY' : '/var/log/waldur' , 'LOGGING_REPORT_INTERVAL' : datetime . timedelta ( days = 7 ), 'NATIVE_NAME_ENABLED' : False , 'NOTIFICATIONS_PROFILE_CHANGES' : { 'ENABLED' : True , 'FIELDS' : ( 'email' , 'phone_number' , 'job_title' )}, 'NOTIFICATION_SUBJECT' : 'Notifications from Waldur' , 'ONLY_STAFF_CAN_INVITE_USERS' : False , 'ONLY_STAFF_MANAGES_SERVICES' : False , 'OWNERS_CAN_MANAGE_OWNERS' : False , 'OWNER_CAN_MANAGE_CUSTOMER' : False , 'PROTECT_USER_DETAILS_FOR_REGISTRATION_METHODS' : [], 'SELLER_COUNTRY_CODE' : None , 'SHOW_ALL_USERS' : False , 'SITE_ADDRESS' : 'Default address' , 'SITE_EMAIL' : 'Default email' , 'SITE_LOGO' : None , 'SITE_NAME' : 'Waldur MasterMind' , 'SITE_PHONE' : 'Default phone' , 'TOKEN_KEY' : 'x-auth-token' , 'TOKEN_LIFETIME' : datetime . timedelta ( seconds = 3600 ), 'USE_ATOMIC_TRANSACTION' : True , 'VALIDATE_INVITATION_EMAIL' : False }","title":"WALDUR_CORE plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#allow_signup_without_invitation","text":"Type: bool Allow to signup without an invitation.","title":"ALLOW_SIGNUP_WITHOUT_INVITATION"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#attachment_link_max_age","text":"Type: timedelta Max age of secure token for media download.","title":"ATTACHMENT_LINK_MAX_AGE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#authentication_methods","text":"Type: List[str] List of enabled authentication methods.","title":"AUTHENTICATION_METHODS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#backend_fields_editable","text":"Type: bool Allows to control /admin writable fields. If this flag is disabled it is impossible to edit any field that corresponds to backend value via /admin. Such restriction allows to save information from corruption.","title":"BACKEND_FIELDS_EDITABLE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#countries","text":"Type: List[str] It is used in organization creation dialog in order to limit country choices to predefined set.","title":"COUNTRIES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#create_default_project_on_organization_creation","text":"Type: bool Enables generation of the first project on organization creation.","title":"CREATE_DEFAULT_PROJECT_ON_ORGANIZATION_CREATION"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#currency_name","text":"Type: str It is used in marketplace order details and invoices for currency formatting.","title":"CURRENCY_NAME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#email_change_max_age","text":"Type: timedelta Max age of change email request.","title":"EMAIL_CHANGE_MAX_AGE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enable_accounting_start_date","text":"Type: bool Allows to enable accounting for organizations using value of accounting_start_date field.","title":"ENABLE_ACCOUNTING_START_DATE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enable_geoip","text":"Type: bool Enable detection of coordinates of virtual machines.","title":"ENABLE_GEOIP"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#extensions_autoregister","text":"Type: bool Defines whether extensions should be automatically registered.","title":"EXTENSIONS_AUTOREGISTER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#homeport_url","text":"Type: str It is used for rendering callback URL in HomePort.","title":"HOMEPORT_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#http_chunk_size","text":"Type: int Chunk size for resource fetching from backend API. It is needed in order to avoid too long HTTP request error.","title":"HTTP_CHUNK_SIZE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#initial_customer_agreement_number","text":"Type: int Allows to tweak initial value of agreement number. It is assumed that organization owner should accept terms of services when organization is registered via Waldur HomePort.","title":"INITIAL_CUSTOMER_AGREEMENT_NUMBER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#invitations_enabled","text":"Type: bool Allows to disable invitations feature.","title":"INVITATIONS_ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#invitation_create_missing_user","text":"Type: bool Allow to create FreeIPA user using details specified in invitation if user does not exist yet.","title":"INVITATION_CREATE_MISSING_USER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#invitation_disable_multiple_roles","text":"Type: bool Do not allow user to grant multiple roles in the same project or organization using invitation.","title":"INVITATION_DISABLE_MULTIPLE_ROLES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#invitation_lifetime","text":"Type: timedelta Defines for how long invitation remains valid.","title":"INVITATION_LIFETIME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#invitation_max_age","text":"Type: Optional[timedelta] Max age of invitation token. It is used in approve and reject actions.","title":"INVITATION_MAX_AGE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#logging_report_directory","text":"Type: str Directory where log files are located.","title":"LOGGING_REPORT_DIRECTORY"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#logging_report_interval","text":"Type: timedelta Files older that specified interval are filtered out.","title":"LOGGING_REPORT_INTERVAL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#native_name_enabled","text":"Type: bool Allows to render native name field in customer and user forms.","title":"NATIVE_NAME_ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#notifications_profile_changes","text":"Type: dict Allows enabling notifications about profile changes of organization owners.","title":"NOTIFICATIONS_PROFILE_CHANGES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#notification_subject","text":"Type: str It is used as a subject of email emitted by event logging hook.","title":"NOTIFICATION_SUBJECT"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#only_staff_can_invite_users","text":"Type: bool Allow to limit invitation management to staff only.","title":"ONLY_STAFF_CAN_INVITE_USERS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#only_staff_manages_services","text":"Type: bool Allows to restrict provider management only to staff users.","title":"ONLY_STAFF_MANAGES_SERVICES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#owners_can_manage_owners","text":"Type: bool Enables organization owners to manage other organization owners.","title":"OWNERS_CAN_MANAGE_OWNERS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#owner_can_manage_customer","text":"Type: bool Enables organization owners to create an organization.","title":"OWNER_CAN_MANAGE_CUSTOMER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#protect_user_details_for_registration_methods","text":"Type: List[str] List of authentication methods which are not allowed to update user details.","title":"PROTECT_USER_DETAILS_FOR_REGISTRATION_METHODS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#seller_country_code","text":"Type: Optional[str] Specifies seller legal or effective country of registration or residence as an ISO 3166-1 alpha-2 country code. It is used for computing VAT charge rate.","title":"SELLER_COUNTRY_CODE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#show_all_users","text":"Type: bool Indicates whether user can see all other users in api/users/ endpoint.","title":"SHOW_ALL_USERS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#site_address","text":"Type: str It is used in marketplace order header.","title":"SITE_ADDRESS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#site_email","text":"Type: str It is used in marketplace order header.","title":"SITE_EMAIL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#site_logo","text":"Type: Optional[str] It is used in marketplace order header.","title":"SITE_LOGO"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#site_name","text":"Type: str It is used in email notifications in order to refer to the current deployment in user-friendly way.","title":"SITE_NAME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#site_phone","text":"Type: str It is used in marketplace order header.","title":"SITE_PHONE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#token_key","text":"Type: str Header for token authentication.","title":"TOKEN_KEY"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#token_lifetime","text":"Type: timedelta Defines for how long user token should remain valid if there was no action from user.","title":"TOKEN_LIFETIME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#use_atomic_transaction","text":"Type: bool Wrap action views in atomic transaction.","title":"USE_ATOMIC_TRANSACTION"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#validate_invitation_email","text":"Type: bool Ensure that invitation and user emails match.","title":"VALIDATE_INVITATION_EMAIL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_freeipa-plugin","text":"Default value: 1 2 3 4 5 6 7 8 9 WALDUR_FREEIPA = { 'BLACKLISTED_USERNAMES' : [ 'root' ], 'ENABLED' : False , 'GROUPNAME_PREFIX' : 'waldur_' , 'GROUP_SYNCHRONIZATION_ENABLED' : True , 'HOSTNAME' : 'ipa.example.com' , 'PASSWORD' : 'secret' , 'USERNAME' : 'admin' , 'USERNAME_PREFIX' : 'waldur_' , 'VERIFY_SSL' : True }","title":"WALDUR_FREEIPA plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#blacklisted_usernames","text":"Type: list List of username that users are not allowed to select","title":"BLACKLISTED_USERNAMES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enabled","text":"Type: bool Enable integration of identity provisioning in configured FreeIPA","title":"ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#groupname_prefix","text":"Type: str Prefix to be appended to all group names created in FreeIPA by Waldur","title":"GROUPNAME_PREFIX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#group_synchronization_enabled","text":"Type: bool Optionally disable creation of user groups in FreeIPA matching Waldur structure","title":"GROUP_SYNCHRONIZATION_ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#hostname","text":"Type: str Hostname of FreeIPA server","title":"HOSTNAME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#password","text":"Type: str Password of FreeIPA user with administrative privileges","title":"PASSWORD"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#username","text":"Type: str Username of FreeIPA user with administrative privileges","title":"USERNAME"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#username_prefix","text":"Type: str Prefix to be appended to all usernames created in FreeIPA by Waldur","title":"USERNAME_PREFIX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#verify_ssl","text":"Type: bool Validate TLS certificate of FreeIPA web interface / REST API","title":"VERIFY_SSL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_hpc-plugin","text":"Default value: 1 2 3 4 5 6 7 8 9 10 WALDUR_HPC = { 'ENABLED' : False , 'EXTERNAL_AFFILIATIONS' : [], 'EXTERNAL_CUSTOMER_UUID' : '' , 'EXTERNAL_EMAIL_PATTERNS' : [], 'INTERNAL_AFFILIATIONS' : [], 'INTERNAL_CUSTOMER_UUID' : '' , 'INTERNAL_EMAIL_PATTERNS' : [], 'INTERNAL_LIMITS' : {}, 'OFFERING_UUID' : '' , 'PLAN_UUID' : '' }","title":"WALDUR_HPC plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enabled_1","text":"Type: bool Enable HPC-specific hooks in Waldur deployment","title":"ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#external_affiliations","text":"Type: List[str] List of user affiliations (eduPersonScopedAffiliation fields) that define if the user belongs to external organization.","title":"EXTERNAL_AFFILIATIONS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#external_customer_uuid","text":"Type: str UUID of a Waldur organization (aka customer) where new external users would be added","title":"EXTERNAL_CUSTOMER_UUID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#external_email_patterns","text":"Type: List[str] List of user email patterns (as regex) that define if the user belongs to external organization.","title":"EXTERNAL_EMAIL_PATTERNS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#internal_affiliations","text":"Type: List[str] List of user affiliations (eduPersonScopedAffiliation fields) that define if the user belongs to internal organization.","title":"INTERNAL_AFFILIATIONS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#internal_customer_uuid","text":"Type: str UUID of a Waldur organization (aka customer) where new internal users would be added","title":"INTERNAL_CUSTOMER_UUID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#internal_email_patterns","text":"Type: List[str] List of user email patterns (as regex) that define if the user belongs to internal organization.","title":"INTERNAL_EMAIL_PATTERNS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#internal_limits","text":"Type: dict Overrided default values for SLURM offering to be created for users belonging to internal organization.","title":"INTERNAL_LIMITS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#offering_uuid","text":"Type: str UUID of a Waldur SLURM offering, which will be used for creating allocations for users","title":"OFFERING_UUID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#plan_uuid","text":"Type: str UUID of a Waldur SLURM offering plan, which will be used for creating allocations for users","title":"PLAN_UUID"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_marketplace-plugin","text":"Default value: 1 2 3 4 5 6 7 8 9 10 11 12 13 WALDUR_MARKETPLACE = { 'ADMIN_CAN_APPROVE_ORDER' : False , 'ANONYMOUS_USER_CAN_VIEW_OFFERINGS' : True , 'DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE' : True , 'ENABLE_STALE_RESOURCE_NOTIFICATIONS' : False , 'MANAGER_CAN_APPROVE_ORDER' : False , 'NOTIFY_ABOUT_RESOURCE_CHANGE' : True , 'NOTIFY_STAFF_ABOUT_APPROVALS' : False , 'OWNER_CAN_APPROVE_ORDER' : True , 'OWNER_CAN_REGISTER_SERVICE_PROVIDER' : False , 'PLAN_TEMPLATE' : 'Plan: {{ plan.name }}{ % f or component in components %} \\n ' '{{component.name}}; amount: {{component.amount}}; price: ' '{{component.price|floatformat }};{ % e ndfor %}' , 'THUMBNAIL_SIZE' : ( 120 , 120 )}","title":"WALDUR_MARKETPLACE plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#admin_can_approve_order","text":"Type: bool If true, orders for resource can be approved by admin of the customer project","title":"ADMIN_CAN_APPROVE_ORDER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#anonymous_user_can_view_offerings","text":"Type: bool Allow anonymous users to see shared offerings in active, paused and archived states","title":"ANONYMOUS_USER_CAN_VIEW_OFFERINGS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#disable_sending_notifications_about_resource_update","text":"Type: bool Disable only resource update events.","title":"DISABLE_SENDING_NOTIFICATIONS_ABOUT_RESOURCE_UPDATE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enable_stale_resource_notifications","text":"Type: bool Enable reminders to owners about resources of shared offerings that have not generated any cost for the last 3 months.","title":"ENABLE_STALE_RESOURCE_NOTIFICATIONS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#manager_can_approve_order","text":"Type: bool If true, orders for resource can be approved by manager of the customer project","title":"MANAGER_CAN_APPROVE_ORDER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#notify_about_resource_change","text":"Type: bool If true, notify users about resource changes from Marketplace perspective. Can generate duplicate events if plugins also log","title":"NOTIFY_ABOUT_RESOURCE_CHANGE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#notify_staff_about_approvals","text":"Type: bool If true, users with staff role are notified when request for order approval is generated","title":"NOTIFY_STAFF_ABOUT_APPROVALS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#owner_can_approve_order","text":"Type: bool If true, orders for resource can be approved by custom organization owner.","title":"OWNER_CAN_APPROVE_ORDER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#owner_can_register_service_provider","text":"Type: bool Allow organization owner to request or mark its organization as service provider","title":"OWNER_CAN_REGISTER_SERVICE_PROVIDER"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#plan_template","text":"Type: str Template for a plan field","title":"PLAN_TEMPLATE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#thumbnail_size","text":"Type: tuple Size of the thumbnail to generate when screenshot is uploaded for an offering.","title":"THUMBNAIL_SIZE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_pid-plugin","text":"Default value: 1 2 3 4 5 6 WALDUR_PID = { 'DATACITE' : { 'API_URL' : 'https://example.com' , 'COLLECTION_DOI' : '' , 'PASSWORD' : '' , 'PREFIX' : '' , 'PUBLISHER' : 'Waldur' , 'REPOSITORY_ID' : '' }}","title":"WALDUR_PID plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#datacite","text":"Type: dict Settings for integration of Waldur with Datacite PID service. Collection DOI is used to aggregate generated DOIs.","title":"DATACITE"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#waldur_slurm-plugin","text":"Default value: 1 2 3 4 5 6 WALDUR_SLURM = { 'ALLOCATION_PREFIX' : 'waldur_allocation_' , 'CUSTOMER_PREFIX' : 'waldur_customer_' , 'DEFAULT_LIMITS' : { 'CPU' : 16000 , 'GPU' : 400 , 'RAM' : 102400000 }, 'ENABLED' : False , 'PRIVATE_KEY_PATH' : '/etc/waldur/id_rsa' , 'PROJECT_PREFIX' : 'waldur_project_' }","title":"WALDUR_SLURM plugin"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#allocation_prefix","text":"Type: str Prefix for SLURM account name corresponding to Waldur allocation","title":"ALLOCATION_PREFIX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#customer_prefix","text":"Type: str Prefix for SLURM account name corresponding to Waldur organization.","title":"CUSTOMER_PREFIX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#default_limits","text":"Type: dict Default limits of account that are set when SLURM account is provisioned.","title":"DEFAULT_LIMITS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#enabled_2","text":"Type: bool Enable support for SLURM plugin in a deployment","title":"ENABLED"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#private_key_path","text":"Type: str Path to private key file used as SSH identity file for accessing SLURM master.","title":"PRIVATE_KEY_PATH"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#project_prefix","text":"Type: str Prefix for SLURM account name corresponding to Waldur project.","title":"PROJECT_PREFIX"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#other-variables","text":"","title":"Other variables"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#default_from_email","text":"Type: str, default value: webmaster@localhost Default email address to use for automated correspondence from Waldur.","title":"DEFAULT_FROM_EMAIL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#import_export_use_transactions","text":"Type: bool, default value: True Controls if resource importing should use database transactions. Using transactions makes imports safer as a failure during import won\u2019t import only part of the data set.","title":"IMPORT_EXPORT_USE_TRANSACTIONS"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#ipstack_access_key","text":"Type: Optional[str] Unique authentication key used to gain access to the ipstack API.","title":"IPSTACK_ACCESS_KEY"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#languages","text":"Type: List[Tuple[str, str]], default value: (('en', 'English'), ('et', 'Eesti')) The list is a list of two-tuples in the format (language code, language name) \u2013 for example, ('ja', 'Japanese'). This specifies which languages are available for language selection.","title":"LANGUAGES"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#use_protected_url","text":"Type: bool, default value: False Protect media URLs using signed token.","title":"USE_PROTECTED_URL"},{"location":"admin-guide/mastermind-configuration/configuration-guide.html#verify_webhook_requests","text":"Type: bool, default value: True When webook is processed, requests verifies SSL certificates for HTTPS requests, just like a web browser.","title":"VERIFY_WEBHOOK_REQUESTS"},{"location":"admin-guide/mastermind-configuration/general.html","text":"General Configuration Outline: Introduction Waldur settings Admin dashboard configuration Custom templates configuration Local time zone configuration Introduction Waldur is a Django -based application, so configuration is done by modifying settings.py file. If you want to configure options related to Django, such as tune caches, database connection, configure custom logging, etc, please refer to Django documentation . Please consult configuration guide to learn more. Admin dashboard configuration An admin dashboard supports custom links on Quick access panel. For instance, a panel below was configured with one additional link to https://waldur.com : Configuration of custom links is stored under FLUENT_DASHBOARD_QUICK_ACCESS_LINKS settings key and for current example has following structure: 1 2 3 4 5 6 7 8 9 FLUENT_DASHBOARD_QUICK_ACCESS_LINKS = [ { 'title' : '[Custom] Waldur - Cloud Service' , 'url' : 'https://waldur.com' , 'external' : True , # adds an icon specifying that this link is external, 'description' : 'Open-source Cloud Brokerage Platform' , 'attrs' : { 'target' : '_blank' } # add an attribute to generated anchor element which will open link in a new tab. }, ] Here is a short description of link parameters: Name Type Required Description description string No Tool tip on the link external boolean No Specifies whether additional icon indicating an external URL has to be added url URL Yes A URL of the link title string Yes A title of the generated link attrs dict No A dictionary of anchor attributes to be added to generated element It is also possible to omit optional fields and add links by specifying only a title and a URL to the generated link. 1 2 3 4 FLUENT_DASHBOARD_QUICK_ACCESS_LINKS = [ [ '[Custom] Waldur - Cloud Service' , 'https://waldur.com' ], [ 'Find us on GitHub' , 'https://github.com/opennode/waldur-core' ], ] Custom templates configuration To overwrite default templates you should use django-dbtemplates . It allows creation of templates through /admin . Local time zone configuration Set TIME_ZONE setting in /etc/waldur/override.conf.py to use local time zone. By default it is set to UTC. See the list of time zones for possible options.","title":"General Configuration"},{"location":"admin-guide/mastermind-configuration/general.html#general-configuration","text":"Outline: Introduction Waldur settings Admin dashboard configuration Custom templates configuration Local time zone configuration","title":"General Configuration"},{"location":"admin-guide/mastermind-configuration/general.html#introduction","text":"Waldur is a Django -based application, so configuration is done by modifying settings.py file. If you want to configure options related to Django, such as tune caches, database connection, configure custom logging, etc, please refer to Django documentation . Please consult configuration guide to learn more.","title":"Introduction"},{"location":"admin-guide/mastermind-configuration/general.html#admin-dashboard-configuration","text":"An admin dashboard supports custom links on Quick access panel. For instance, a panel below was configured with one additional link to https://waldur.com : Configuration of custom links is stored under FLUENT_DASHBOARD_QUICK_ACCESS_LINKS settings key and for current example has following structure: 1 2 3 4 5 6 7 8 9 FLUENT_DASHBOARD_QUICK_ACCESS_LINKS = [ { 'title' : '[Custom] Waldur - Cloud Service' , 'url' : 'https://waldur.com' , 'external' : True , # adds an icon specifying that this link is external, 'description' : 'Open-source Cloud Brokerage Platform' , 'attrs' : { 'target' : '_blank' } # add an attribute to generated anchor element which will open link in a new tab. }, ] Here is a short description of link parameters: Name Type Required Description description string No Tool tip on the link external boolean No Specifies whether additional icon indicating an external URL has to be added url URL Yes A URL of the link title string Yes A title of the generated link attrs dict No A dictionary of anchor attributes to be added to generated element It is also possible to omit optional fields and add links by specifying only a title and a URL to the generated link. 1 2 3 4 FLUENT_DASHBOARD_QUICK_ACCESS_LINKS = [ [ '[Custom] Waldur - Cloud Service' , 'https://waldur.com' ], [ 'Find us on GitHub' , 'https://github.com/opennode/waldur-core' ], ]","title":"Admin dashboard configuration"},{"location":"admin-guide/mastermind-configuration/general.html#custom-templates-configuration","text":"To overwrite default templates you should use django-dbtemplates . It allows creation of templates through /admin .","title":"Custom templates configuration"},{"location":"admin-guide/mastermind-configuration/general.html#local-time-zone-configuration","text":"Set TIME_ZONE setting in /etc/waldur/override.conf.py to use local time zone. By default it is set to UTC. See the list of time zones for possible options.","title":"Local time zone configuration"},{"location":"admin-guide/mastermind-configuration/google-calendar.html","text":"Configuration of the Google Calendar","title":"Configuration of the Google Calendar"},{"location":"admin-guide/mastermind-configuration/google-calendar.html#configuration-of-the-google-calendar","text":"","title":"Configuration of the Google Calendar"},{"location":"admin-guide/providers/adding-an-offering.html","text":"Adding an offering Waldur supports a number of different types of service providers when creating a shared offering. A common way of creating an offering is through a HomePort. Select organization, which will provide the offering. Make sure that organization is a service provider. Make it one with a staff user if the flag is not set. Go to public offerings and click on adding a new one: Fill in public offering details: Activate offering to make it visible to everybody. Tip For more advanced cases of management of offerings, take a look at how a SLURM offering can be managed using Ansible module .","title":"Adding an offering"},{"location":"admin-guide/providers/adding-an-offering.html#adding-an-offering","text":"Waldur supports a number of different types of service providers when creating a shared offering. A common way of creating an offering is through a HomePort. Select organization, which will provide the offering. Make sure that organization is a service provider. Make it one with a staff user if the flag is not set. Go to public offerings and click on adding a new one: Fill in public offering details: Activate offering to make it visible to everybody. Tip For more advanced cases of management of offerings, take a look at how a SLURM offering can be managed using Ansible module .","title":"Adding an offering"},{"location":"admin-guide/providers/azure.html","text":"Azure Warning Documentation is in progress. Plugin development is in progress. Setting up Tenant https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-create-new-tenant Setting up a Client https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app Add permissions Make sure that client is able to perform operations on the different resources. https://stackoverflow.com/questions/42134892/the-client-with-object-id-does-not-have-authorization-to-perform-action-microso","title":"Azure"},{"location":"admin-guide/providers/azure.html#azure","text":"Warning Documentation is in progress. Plugin development is in progress.","title":"Azure"},{"location":"admin-guide/providers/azure.html#setting-up-tenant","text":"https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-create-new-tenant","title":"Setting up Tenant"},{"location":"admin-guide/providers/azure.html#setting-up-a-client","text":"https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app","title":"Setting up a Client"},{"location":"admin-guide/providers/azure.html#add-permissions","text":"Make sure that client is able to perform operations on the different resources. https://stackoverflow.com/questions/42134892/the-client-with-object-id-does-not-have-authorization-to-perform-action-microso","title":"Add permissions"},{"location":"admin-guide/providers/moab.html","text":"MOAB MOAB is a scheduling engine for HPC centers. Warning As adoption of MOAB has significantly reduced over the last years and there are no active users of Waldur with MOAB requirements, we have deprecated and removed MOAB provider. Migration from MOAB to SLURM If you are still running MOAB and would like to move to a supported scheduler - SLURM, please find the suggested articles below. They are provided by external parties with no affiliation to Waldur team. Moab to SLURM migration guide Converting Moab/Torque scripts to Slurm Converting Moab/Torque script to Slurm #2 Slurm vs Moab/Torque","title":"MOAB"},{"location":"admin-guide/providers/moab.html#moab","text":"MOAB is a scheduling engine for HPC centers. Warning As adoption of MOAB has significantly reduced over the last years and there are no active users of Waldur with MOAB requirements, we have deprecated and removed MOAB provider.","title":"MOAB"},{"location":"admin-guide/providers/moab.html#migration-from-moab-to-slurm","text":"If you are still running MOAB and would like to move to a supported scheduler - SLURM, please find the suggested articles below. They are provided by external parties with no affiliation to Waldur team. Moab to SLURM migration guide Converting Moab/Torque scripts to Slurm Converting Moab/Torque script to Slurm #2 Slurm vs Moab/Torque","title":"Migration from MOAB to SLURM"},{"location":"admin-guide/providers/openstack.html","text":"OpenStack (Tenant) Requirements for OpenStack (Tenant) In order to integrate an OpenStack-based cloud as a shared provider, the following data is required: URL of Keystone's public endpoint (v3). Access to public interfaces of Keystone, Nova, Cinder, Neutron and Glance should be opened to Waldur MasterMind server. Admin credentials (username/password) as well as domain name (in case non-default domain is used). External network UUID - the network will be by default connected to all created OpenStack Projects (Tenants). Advanced settings It's possible to override some settings for OpenStack in MasterMind admin interface. To do that, please go to Waldur MasterMind Admin interface with a staff account. Go to Structure \u2192 Shared provider settings and select the one you want to update. Define specific customisation options. To add an option select append on item block under the object tree. Most typical are: - external_network_id \u2013 external network to connect to when creating a VPC from this provider. - access_url - a URL to access OpenStack Horizon dashboard from a public network. Typically a reverse proxy URL in production deployments. - flavor_exclude_regex - flavors matching this regex expression will not be pulled from the backend. - dns_nameservers - default value for new subnets DNS name servers. Should be defined as list. - create_ha_routers - create highly available Neutron routers when creating Tenants. Support for Organization specific OpenStack networks You can provide specific external network for all OpenStack Tenants created by Organiztion by providing external network UUIDs in Organization configuration in Waldur Mastermind admin portal.","title":"OpenStack (Tenant)"},{"location":"admin-guide/providers/openstack.html#openstack-tenant","text":"","title":"OpenStack (Tenant)"},{"location":"admin-guide/providers/openstack.html#requirements-for-openstack-tenant","text":"In order to integrate an OpenStack-based cloud as a shared provider, the following data is required: URL of Keystone's public endpoint (v3). Access to public interfaces of Keystone, Nova, Cinder, Neutron and Glance should be opened to Waldur MasterMind server. Admin credentials (username/password) as well as domain name (in case non-default domain is used). External network UUID - the network will be by default connected to all created OpenStack Projects (Tenants).","title":"Requirements for OpenStack (Tenant)"},{"location":"admin-guide/providers/openstack.html#advanced-settings","text":"It's possible to override some settings for OpenStack in MasterMind admin interface. To do that, please go to Waldur MasterMind Admin interface with a staff account. Go to Structure \u2192 Shared provider settings and select the one you want to update. Define specific customisation options. To add an option select append on item block under the object tree. Most typical are: - external_network_id \u2013 external network to connect to when creating a VPC from this provider. - access_url - a URL to access OpenStack Horizon dashboard from a public network. Typically a reverse proxy URL in production deployments. - flavor_exclude_regex - flavors matching this regex expression will not be pulled from the backend. - dns_nameservers - default value for new subnets DNS name servers. Should be defined as list. - create_ha_routers - create highly available Neutron routers when creating Tenants.","title":"Advanced settings"},{"location":"admin-guide/providers/openstack.html#support-for-organization-specific-openstack-networks","text":"You can provide specific external network for all OpenStack Tenants created by Organiztion by providing external network UUIDs in Organization configuration in Waldur Mastermind admin portal.","title":"Support for Organization specific OpenStack networks"},{"location":"admin-guide/providers/remote-waldur.html","text":"Remote Offering Warning Documentation is in progress. Plugin development is in progress. Introduction It is possible to import into a Waldur offerings from a remote Waldur. Pre-requisites An organization in the remote Waldur, which will contain requests and projects from the local Waldur. Account with owner role that will be used for integration. Access to APIs of remote Waldur. High level process In local Waldur, make sure that you have a service provider organization available. Click on \"Import offering\". Input remote Waldur API and authentication token. Select the remote organization and offering to be imported. Review and activate the offering. EduTeams account SYNC In case both local and remote Waldurs are relying on a common set of identities from EduTeams , it is possible to configure synchronisation of the identities as well, i.e. when a resource is provisioned in a remote Waldur, local accounts from organization and project are pushed and mapped to the remote project. Note For this to work, remote Waldur must be integrated with eduTeams registry and integration user must have identity_manager role.","title":"Remote Offering"},{"location":"admin-guide/providers/remote-waldur.html#remote-offering","text":"Warning Documentation is in progress. Plugin development is in progress.","title":"Remote Offering"},{"location":"admin-guide/providers/remote-waldur.html#introduction","text":"It is possible to import into a Waldur offerings from a remote Waldur.","title":"Introduction"},{"location":"admin-guide/providers/remote-waldur.html#pre-requisites","text":"An organization in the remote Waldur, which will contain requests and projects from the local Waldur. Account with owner role that will be used for integration. Access to APIs of remote Waldur.","title":"Pre-requisites"},{"location":"admin-guide/providers/remote-waldur.html#high-level-process","text":"In local Waldur, make sure that you have a service provider organization available. Click on \"Import offering\". Input remote Waldur API and authentication token. Select the remote organization and offering to be imported. Review and activate the offering.","title":"High level process"},{"location":"admin-guide/providers/remote-waldur.html#eduteams-account-sync","text":"In case both local and remote Waldurs are relying on a common set of identities from EduTeams , it is possible to configure synchronisation of the identities as well, i.e. when a resource is provisioned in a remote Waldur, local accounts from organization and project are pushed and mapped to the remote project. Note For this to work, remote Waldur must be integrated with eduTeams registry and integration user must have identity_manager role.","title":"EduTeams account SYNC"},{"location":"admin-guide/providers/slurm.html","text":"SLURM provider SLURM plugin enables sharing of access to a SLURM cluster. SLURM is a scheduling system used typically for managing High-performance clusters. Waldur allows to share access by creating Slurm accounts and managing permission rights of users. Configure Waldur SLURM plugin By default, Waldur creates a hierarchical account structure in SLURM, where: Organization gets an account under a default account, defined when configuring SLURM service offering; Each project is created as a an allocation, which is a child of organization's account. Each resource created in Waldur (aka SLURM Allocation) gets its own SLURM account with project account as a parent. These accounts get standard prefixes along with unique values and user provided input. It is possible to customize prefixes in Waldur configuration. Check WALDUR_SLURM variables in Waldur configuration guide . Add SLURM provider To add SLURM as a provider to Waldur, you will need the following information: SSH host address to a node, from where SLURM commands could be executed. Username that has Slurm operator role . Operator is needed as Waldur dynamically creates accounts based on user's choice of FreeIPA account. Waldur public key must be added as authorized_key for the operator's username. Slurm login node must be configured to authenticate users coming from FreeIPA connected to Waldur. SLURM auto-provisioning hooks It is possible to streamline creation of SLURM allocations for new users based on affiliation of a user profile. Configuration settings are described in Waldur configuration guide under WALDUR_HPC settings. The logic is as follows: Once a user is created (e.g. via eduGAIN login), user's affiliation and email are checked to see if user belongs to internal or external organization. If so, a project is created for the user in a corresponding organization. For users belonging to internal organization, SLURM request is pre-filled and created using account limits of internal organizations. For users belonging to external organization, SLURM request is pre-filled only - it would require a manual confirmation from the organization owner of the external organization to be provisioned. Default limits of SLURM apply. Configure SLURM cluster Waldur might work out of the box with most of the reasonably modern deployments of SLURM, which have accounting enabled and limits enforced. Please refer to SLURM documentation for details: SLURM Accounting SLURM Resource Limits SLURM Multifactor Priority Plugin We provide a snapshot of instructions for the convenience of the reader. Add SLURM cluster SLURM accounting plugin assumes that at least one cluster is configured. For example: 1 sacctmgr add cluster linux Enforce SLURM accounting limits In order to enforce limits set on associations and QoS, please modify slurm.conf: 1 AccountingStorageEnforce=limits Please note, that when AccountingStorageEnforce is changed, a restart of the slurmctld daemon is required (not just a scontrol reconfig ): 1 systemctl restart slurmctld Enable SLURM Multi Priority plugin In order to enable ordering for the queue of jobs waiting to be scheduled, please modify slurm.conf: 1 PriorityType=priority/multifactor When slurm.conf is changed, you should reload configuration: 1 scontrol reconfig","title":"SLURM provider"},{"location":"admin-guide/providers/slurm.html#slurm-provider","text":"SLURM plugin enables sharing of access to a SLURM cluster. SLURM is a scheduling system used typically for managing High-performance clusters. Waldur allows to share access by creating Slurm accounts and managing permission rights of users.","title":"SLURM provider"},{"location":"admin-guide/providers/slurm.html#configure-waldur-slurm-plugin","text":"By default, Waldur creates a hierarchical account structure in SLURM, where: Organization gets an account under a default account, defined when configuring SLURM service offering; Each project is created as a an allocation, which is a child of organization's account. Each resource created in Waldur (aka SLURM Allocation) gets its own SLURM account with project account as a parent. These accounts get standard prefixes along with unique values and user provided input. It is possible to customize prefixes in Waldur configuration. Check WALDUR_SLURM variables in Waldur configuration guide .","title":"Configure Waldur SLURM plugin"},{"location":"admin-guide/providers/slurm.html#add-slurm-provider","text":"To add SLURM as a provider to Waldur, you will need the following information: SSH host address to a node, from where SLURM commands could be executed. Username that has Slurm operator role . Operator is needed as Waldur dynamically creates accounts based on user's choice of FreeIPA account. Waldur public key must be added as authorized_key for the operator's username. Slurm login node must be configured to authenticate users coming from FreeIPA connected to Waldur.","title":"Add SLURM provider"},{"location":"admin-guide/providers/slurm.html#slurm-auto-provisioning-hooks","text":"It is possible to streamline creation of SLURM allocations for new users based on affiliation of a user profile. Configuration settings are described in Waldur configuration guide under WALDUR_HPC settings. The logic is as follows: Once a user is created (e.g. via eduGAIN login), user's affiliation and email are checked to see if user belongs to internal or external organization. If so, a project is created for the user in a corresponding organization. For users belonging to internal organization, SLURM request is pre-filled and created using account limits of internal organizations. For users belonging to external organization, SLURM request is pre-filled only - it would require a manual confirmation from the organization owner of the external organization to be provisioned. Default limits of SLURM apply.","title":"SLURM auto-provisioning hooks"},{"location":"admin-guide/providers/slurm.html#configure-slurm-cluster","text":"Waldur might work out of the box with most of the reasonably modern deployments of SLURM, which have accounting enabled and limits enforced. Please refer to SLURM documentation for details: SLURM Accounting SLURM Resource Limits SLURM Multifactor Priority Plugin We provide a snapshot of instructions for the convenience of the reader.","title":"Configure SLURM cluster"},{"location":"admin-guide/providers/slurm.html#add-slurm-cluster","text":"SLURM accounting plugin assumes that at least one cluster is configured. For example: 1 sacctmgr add cluster linux","title":"Add SLURM cluster"},{"location":"admin-guide/providers/slurm.html#enforce-slurm-accounting-limits","text":"In order to enforce limits set on associations and QoS, please modify slurm.conf: 1 AccountingStorageEnforce=limits Please note, that when AccountingStorageEnforce is changed, a restart of the slurmctld daemon is required (not just a scontrol reconfig ): 1 systemctl restart slurmctld","title":"Enforce SLURM accounting limits"},{"location":"admin-guide/providers/slurm.html#enable-slurm-multi-priority-plugin","text":"In order to enable ordering for the queue of jobs waiting to be scheduled, please modify slurm.conf: 1 PriorityType=priority/multifactor When slurm.conf is changed, you should reload configuration: 1 scontrol reconfig","title":"Enable SLURM Multi Priority plugin"},{"location":"integrator-guide/ansible-module.html","text":"Ansible module for Waldur Waldur-based solutions can be managed with Ansible modules to allow provisioning and management of infrastructure under Waldur through Ansible playbooks. Supported functionality OpenStack management. SLURM HPC management Common client for Waldur APIs in Python. See also: http://docs.ansible.com/ansible/modules.html Installation 1 pip install ansible-waldur-module Example usage Configure an Ansible playbook with parameters 1 2 3 4 5 6 7 8 9 10 11 12 13 14 name : Trigger master instance waldur_marketplace_os_instance : access_token : \"{{ access_token }}\" api_url : \"{{ api_url }}\" flavor : m1.micro floating_ip : auto image : CentOS 7 x86_64 name : \"{{ instance_name }}\" project : \"OpenStack Project\" offering : Instance in Tenant ssh_key : ssh1.pub subnet : vpc-1-tm-sub-net-2 system_volume_size : 40 wait : false Pass parameters to an Ansible playbook 1 2 3 4 ANSIBLE_LIBRARY = /usr/share/ansible-waldur/ ansible \\ -m waldur_marketplace_os_instance \\ -a \"api_url=https://waldur.example.com/api/ access_token=9036194e1ac54cada3248a8c6b203bf7 name=instance-name project='Project name'\" \\ localhost Running playbook using virtual Python environment If you've installed Ansible Waldur module to virtual Python environment you need to specify path to Python interpreter and path to module library along with path to playbook: 1 2 3 4 ansible-playbook \\ -e ansible_python_interpreter = /home/user/ansible-env/bin/python \\ -M /home/user/ansible-env/lib/python3.8/site-packages/ \\ playbook.yml Contributing See general guidelines: https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_general.html Install pre-commit and tox 1 2 pip install tox pre-commit pre-commit install When new module is implemented, don't forget to update py_modules section in setup.py file. When new module is implemented, it should be covered with tests. Run tests using tox 1 tox Module name should consist of three parts separated by underscore: waldur , plugin name, entity name. For example, waldur_os_snapshot refers to OpenStack (OS) as plugin name and snapshot as entity name.","title":"Ansible module for Waldur"},{"location":"integrator-guide/ansible-module.html#ansible-module-for-waldur","text":"Waldur-based solutions can be managed with Ansible modules to allow provisioning and management of infrastructure under Waldur through Ansible playbooks.","title":"Ansible module for Waldur"},{"location":"integrator-guide/ansible-module.html#supported-functionality","text":"OpenStack management. SLURM HPC management Common client for Waldur APIs in Python. See also: http://docs.ansible.com/ansible/modules.html","title":"Supported functionality"},{"location":"integrator-guide/ansible-module.html#installation","text":"1 pip install ansible-waldur-module","title":"Installation"},{"location":"integrator-guide/ansible-module.html#example-usage","text":"","title":"Example usage"},{"location":"integrator-guide/ansible-module.html#configure-an-ansible-playbook-with-parameters","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 name : Trigger master instance waldur_marketplace_os_instance : access_token : \"{{ access_token }}\" api_url : \"{{ api_url }}\" flavor : m1.micro floating_ip : auto image : CentOS 7 x86_64 name : \"{{ instance_name }}\" project : \"OpenStack Project\" offering : Instance in Tenant ssh_key : ssh1.pub subnet : vpc-1-tm-sub-net-2 system_volume_size : 40 wait : false","title":"Configure an Ansible playbook with parameters"},{"location":"integrator-guide/ansible-module.html#pass-parameters-to-an-ansible-playbook","text":"1 2 3 4 ANSIBLE_LIBRARY = /usr/share/ansible-waldur/ ansible \\ -m waldur_marketplace_os_instance \\ -a \"api_url=https://waldur.example.com/api/ access_token=9036194e1ac54cada3248a8c6b203bf7 name=instance-name project='Project name'\" \\ localhost","title":"Pass parameters to an Ansible playbook"},{"location":"integrator-guide/ansible-module.html#running-playbook-using-virtual-python-environment","text":"If you've installed Ansible Waldur module to virtual Python environment you need to specify path to Python interpreter and path to module library along with path to playbook: 1 2 3 4 ansible-playbook \\ -e ansible_python_interpreter = /home/user/ansible-env/bin/python \\ -M /home/user/ansible-env/lib/python3.8/site-packages/ \\ playbook.yml","title":"Running playbook using virtual Python environment"},{"location":"integrator-guide/ansible-module.html#contributing","text":"See general guidelines: https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_general.html Install pre-commit and tox 1 2 pip install tox pre-commit pre-commit install When new module is implemented, don't forget to update py_modules section in setup.py file. When new module is implemented, it should be covered with tests. Run tests using tox 1 tox Module name should consist of three parts separated by underscore: waldur , plugin name, entity name. For example, waldur_os_snapshot refers to OpenStack (OS) as plugin name and snapshot as entity name.","title":"Contributing"},{"location":"integrator-guide/APIs/authentication.html","text":"Authentication Outline: Authentication with username and password Authentication Token management Waldur MasterMind exposes REST API for all of its operations. Below are examples of typical operations performed against APIs. To run the examples, we are using a HTTPie . Almost all of the operations with API require an authentication token. Below we list two methods on how to get it. Authentication with username and password If your account is allowed to use username/password and the method is enabled (e.g. in dev environment), you can get a new token by submitting a username/password as JSON to a specific endpoint. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 $ http -v POST https://waldur.example.com/api-auth/password/ username = user password = password POST /api-auth/password/ HTTP/1.1 Accept: application/json, */* ; q = 0 .5 Accept-Encoding: gzip, deflate Connection: keep-alive Content-Length: 40 Content-Type: application/json Host: waldur.example.com User-Agent: HTTPie/2.3.0 { \"password\" : \"user\" , \"username\" : \"password\" } HTTP/1.1 200 OK Access-Control-Allow-Credentials: true Access-Control-Allow-Headers: Accept, Accept-Encoding, Authorization, Content-Type, Origin, User-Agent, X-CSRFToken, X-Requested-With Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Link, X-Result-Count Allow: POST, OPTIONS Content-Language: en Content-Length: 52 Content-Security-Policy: report-uri csp.hpc.ut.ee ; form-action 'self' ; Content-Type: application/json Date: Mon, 05 Apr 2021 14 :37:55 GMT Referrer-Policy: no-referrer-when-downgrade Strict-Transport-Security: max-age = 31536000 ; preload Vary: Accept-Language, Cookie X-Content-Type-Options: nosniff X-Frame-Options: SAMEORIGIN X-XSS-Protection: 1 ; mode = block { \"token\" : \"65b4c4f5e25f0cadb3e11c181be4ffa3881741f8\" } Authentication Token management The easiest way to get your token is via Waldur HomePort. Go to user workspace by selecting 'Manage' in the user drop-down. Scroll down to the Current API token field and click on the 'eye' icon to display the token.","title":"Authentication"},{"location":"integrator-guide/APIs/authentication.html#authentication","text":"Outline: Authentication with username and password Authentication Token management Waldur MasterMind exposes REST API for all of its operations. Below are examples of typical operations performed against APIs. To run the examples, we are using a HTTPie . Almost all of the operations with API require an authentication token. Below we list two methods on how to get it.","title":"Authentication"},{"location":"integrator-guide/APIs/authentication.html#authentication-with-username-and-password","text":"If your account is allowed to use username/password and the method is enabled (e.g. in dev environment), you can get a new token by submitting a username/password as JSON to a specific endpoint. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 $ http -v POST https://waldur.example.com/api-auth/password/ username = user password = password POST /api-auth/password/ HTTP/1.1 Accept: application/json, */* ; q = 0 .5 Accept-Encoding: gzip, deflate Connection: keep-alive Content-Length: 40 Content-Type: application/json Host: waldur.example.com User-Agent: HTTPie/2.3.0 { \"password\" : \"user\" , \"username\" : \"password\" } HTTP/1.1 200 OK Access-Control-Allow-Credentials: true Access-Control-Allow-Headers: Accept, Accept-Encoding, Authorization, Content-Type, Origin, User-Agent, X-CSRFToken, X-Requested-With Access-Control-Allow-Methods: DELETE, GET, OPTIONS, PATCH, POST, PUT Access-Control-Allow-Origin: * Access-Control-Expose-Headers: Link, X-Result-Count Allow: POST, OPTIONS Content-Language: en Content-Length: 52 Content-Security-Policy: report-uri csp.hpc.ut.ee ; form-action 'self' ; Content-Type: application/json Date: Mon, 05 Apr 2021 14 :37:55 GMT Referrer-Policy: no-referrer-when-downgrade Strict-Transport-Security: max-age = 31536000 ; preload Vary: Accept-Language, Cookie X-Content-Type-Options: nosniff X-Frame-Options: SAMEORIGIN X-XSS-Protection: 1 ; mode = block { \"token\" : \"65b4c4f5e25f0cadb3e11c181be4ffa3881741f8\" }","title":"Authentication with username and password"},{"location":"integrator-guide/APIs/authentication.html#authentication-token-management","text":"The easiest way to get your token is via Waldur HomePort. Go to user workspace by selecting 'Manage' in the user drop-down. Scroll down to the Current API token field and click on the 'eye' icon to display the token.","title":"Authentication Token management"},{"location":"user-guide/index.html","text":"User Guide User guide is in the process of migration. You can check the old version , but keep in mind that some of the parts are outdated.","title":"User Guide"},{"location":"user-guide/index.html#user-guide","text":"User guide is in the process of migration. You can check the old version , but keep in mind that some of the parts are outdated.","title":"User Guide"},{"location":"user-guide/marketplace.html","text":"Introduction Marketplace is a central module for provisioning of Waldur resources. Marketplace contains Offerings that belong to a special type of Organizations - Service Providers. Marketplace provides common functionality for resource lifecycle management, accounting and invoicing. Specifics are implemented in the Marketplace plugins (e.g. for OpenStack, SLURM, Rancher, etc). Terminology Name Description Examples Organization Legal representation of the entity that can be a client of the Operator. Ministry A, Department B Project Functionality in Self-Service Portal, which allows to group internal resources into projects, which allows to limit access to resources for people. Internal systems, Public web Service Provider Organization can publish offerings in marketplace as soon as it is registered as service provider. ETAIS, UT HPCC Offering Service Offering from Service Provider, which can be requested via a Marketplace. Correspond to an entry in the Service Catalogue. VPS with LB, VDC in DataCenter 1 Category A grouping of the Offerings defining metadata common to all offerings in this Category. Compute, Storage, Operations Section Section is a named aggregate of offering attributes. System information, Support, Security Attribute Attribute is an atomic piece of offering metadata, it has name, type and list of options. Peak TFlop/s, Memory per node (GB) Plan An option for paying for a particular Offering. There can be multiple options but at each point in time only one Plan can be active. Small private cloud, Big private cloud Order A collection of Order items. Considered as done when all Order Items have been processed. 3 different Offerings with configuration. Order Item Connects Offering with concrete Organization and configuration settings. Small VPC with name \u201ctest\u201d Resource Created as part of fulfilling the Order Item. Represents part of the Offering that customer Organization can use. VM, VPC Category component Specifies unit of measurement, display name and internal name of the component, which should be present in every category offerings. It is used for aggregating offering component usage and rendering dashboard charts in both project and organization workspace. vCPU, RAM, storage Offering component Usage-based component that constitute offering. It may refer to the category component via parent field in order to ensure that component usage is aggregated. Database count, disk usage Plan Component Components that constitute a plan. vCPU, RAM, storage, network bandwidth Component usage Collects reported resource usage for each plan component separately. 5 virtual floating IPs for the last month. Diagram of concepts Adding a new Offering To create a new Offering in the Marketplace, you need to: Assure that categories are configured in the Marketplace. Create at least one service provider. Create and activate a public offering. Creating a Service Provider Pick or create an organization that will be used as a service provider. Mark it a such in the Management tab of the organization using \"Register as service provider\": Creating Marketplace categories To create a category, either use administrative interface of Waldur, hosted under `/admin (can be accessed by staff users) or use management command for loading the pre-defined categories. With Docker-compose deployment: 1 docker exec -t waldur-mastermind-worker waldur load_categories # vpc vm storage ... With Helm deployment Open waldur-mastermind-worker shell and execute the following command: Get waldur-mastermind-worker pod name 1 2 3 # Example: kubectl get pods -A | grep waldur-mastermind-worker # --> # default waldur-mastermind-worker-6d98cd98bd-wps8n 1/1 Running 0 9m9s Connect to pod via shell 1 2 # Example: kubectl exec -it waldur-mastermind-worker-6d98cd98bd-wps8n -- /bin/bash Execute command to see available or add a category 1 waldur load_categories # vpc vm storage ... Creating public Offering Once you have a service provider and at least one category defined, you can add a new service offering. Go to Public services -> Public offerings: Fill in details of the offerings. Activate an offering (requires staff account) to make it visible in the Marketplace.","title":"Marketplace"},{"location":"user-guide/marketplace.html#introduction","text":"Marketplace is a central module for provisioning of Waldur resources. Marketplace contains Offerings that belong to a special type of Organizations - Service Providers. Marketplace provides common functionality for resource lifecycle management, accounting and invoicing. Specifics are implemented in the Marketplace plugins (e.g. for OpenStack, SLURM, Rancher, etc).","title":"Introduction"},{"location":"user-guide/marketplace.html#terminology","text":"Name Description Examples Organization Legal representation of the entity that can be a client of the Operator. Ministry A, Department B Project Functionality in Self-Service Portal, which allows to group internal resources into projects, which allows to limit access to resources for people. Internal systems, Public web Service Provider Organization can publish offerings in marketplace as soon as it is registered as service provider. ETAIS, UT HPCC Offering Service Offering from Service Provider, which can be requested via a Marketplace. Correspond to an entry in the Service Catalogue. VPS with LB, VDC in DataCenter 1 Category A grouping of the Offerings defining metadata common to all offerings in this Category. Compute, Storage, Operations Section Section is a named aggregate of offering attributes. System information, Support, Security Attribute Attribute is an atomic piece of offering metadata, it has name, type and list of options. Peak TFlop/s, Memory per node (GB) Plan An option for paying for a particular Offering. There can be multiple options but at each point in time only one Plan can be active. Small private cloud, Big private cloud Order A collection of Order items. Considered as done when all Order Items have been processed. 3 different Offerings with configuration. Order Item Connects Offering with concrete Organization and configuration settings. Small VPC with name \u201ctest\u201d Resource Created as part of fulfilling the Order Item. Represents part of the Offering that customer Organization can use. VM, VPC Category component Specifies unit of measurement, display name and internal name of the component, which should be present in every category offerings. It is used for aggregating offering component usage and rendering dashboard charts in both project and organization workspace. vCPU, RAM, storage Offering component Usage-based component that constitute offering. It may refer to the category component via parent field in order to ensure that component usage is aggregated. Database count, disk usage Plan Component Components that constitute a plan. vCPU, RAM, storage, network bandwidth Component usage Collects reported resource usage for each plan component separately. 5 virtual floating IPs for the last month.","title":"Terminology"},{"location":"user-guide/marketplace.html#diagram-of-concepts","text":"","title":"Diagram of concepts"},{"location":"user-guide/marketplace.html#adding-a-new-offering","text":"To create a new Offering in the Marketplace, you need to: Assure that categories are configured in the Marketplace. Create at least one service provider. Create and activate a public offering.","title":"Adding a new Offering"},{"location":"user-guide/marketplace.html#creating-a-service-provider","text":"Pick or create an organization that will be used as a service provider. Mark it a such in the Management tab of the organization using \"Register as service provider\":","title":"Creating a Service Provider"},{"location":"user-guide/marketplace.html#creating-marketplace-categories","text":"To create a category, either use administrative interface of Waldur, hosted under `/admin (can be accessed by staff users) or use management command for loading the pre-defined categories. With Docker-compose deployment: 1 docker exec -t waldur-mastermind-worker waldur load_categories # vpc vm storage ... With Helm deployment Open waldur-mastermind-worker shell and execute the following command: Get waldur-mastermind-worker pod name 1 2 3 # Example: kubectl get pods -A | grep waldur-mastermind-worker # --> # default waldur-mastermind-worker-6d98cd98bd-wps8n 1/1 Running 0 9m9s Connect to pod via shell 1 2 # Example: kubectl exec -it waldur-mastermind-worker-6d98cd98bd-wps8n -- /bin/bash Execute command to see available or add a category 1 waldur load_categories # vpc vm storage ...","title":"Creating Marketplace categories"},{"location":"user-guide/marketplace.html#creating-public-offering","text":"Once you have a service provider and at least one category defined, you can add a new service offering. Go to Public services -> Public offerings: Fill in details of the offerings. Activate an offering (requires staff account) to make it visible in the Marketplace.","title":"Creating public Offering"}]}